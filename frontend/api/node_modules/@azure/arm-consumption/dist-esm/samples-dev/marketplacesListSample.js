/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ConsumptionManagementClient } from "@azure/arm-consumption";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByBillingAccountList.json
 */
function billingAccountMarketplacesList() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/123456";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByBillingAccountListForBillingPeriod.json
 */
function billingAccountMarketplacesListForBillingPeriod() {
    var e_2, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/123456";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByDepartmentList.json
 */
function departmentMarketplacesList() {
    var e_3, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/departments/123456";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByDepartment_ListByBillingPeriod.json
 */
function departmentMarketplacesListForBillingPeriod() {
    var e_4, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/departments/123456";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByEnrollmentAccountList.json
 */
function enrollmentAccountMarketplacesList() {
    var e_5, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/enrollmentAccounts/123456";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByEnrollmentAccounts_ListByBillingPeriod.json
 */
function enrollmentAccountMarketplacesListForBillingPeriod() {
    var e_6, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/enrollmentAccounts/123456";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByManagementGroupList.json
 */
function managementGroupMarketplacesList() {
    var e_7, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesByManagementGroup_ListForBillingPeriod.json
 */
function managementGroupMarketplacesListForBillingPeriod() {
    var e_8, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesList.json
 */
function subscriptionMarketplacesList() {
    var e_9, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_9) throw e_9.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/MarketplacesListForBillingPeriod.json
 */
function subscriptionMarketplacesListForBillingPeriod() {
    var e_10, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.marketplaces.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_10) throw e_10.error; }
        }
        console.log(resArray);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        billingAccountMarketplacesList();
        billingAccountMarketplacesListForBillingPeriod();
        departmentMarketplacesList();
        departmentMarketplacesListForBillingPeriod();
        enrollmentAccountMarketplacesList();
        enrollmentAccountMarketplacesListForBillingPeriod();
        managementGroupMarketplacesList();
        managementGroupMarketplacesListForBillingPeriod();
        subscriptionMarketplacesList();
        subscriptionMarketplacesListForBillingPeriod();
    });
}
main().catch(console.error);
//# sourceMappingURL=marketplacesListSample.js.map