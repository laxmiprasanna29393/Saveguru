/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ConsumptionManagementClient } from "@azure/arm-consumption";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesForBillingPeriodByDepartment.json
 */
function changesForBillingPeriodByDepartmentLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234/departments/42425";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesForBillingPeriodByEnrollmentAccount.json
 */
function changesForBillingPeriodByEnrollmentAccountLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234/enrollmentAccounts/42425";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernBillingAccount.json
 */
function chargesListByBillingAccountModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/1234:56789";
        const startDate = "2019-09-01";
        const endDate = "2019-10-31";
        const options = { startDate, endDate };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernBillingAccountGroupByBillingProfileId.json
 */
function chargesListByBillingAccountGroupByBillingProfileIdModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/1234:56789";
        const startDate = "2019-09-01";
        const endDate = "2019-09-30";
        const apply = "groupby((properties/billingProfileId))";
        const options = { startDate, endDate, apply };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernBillingAccountGroupByCustomerId.json
 */
function chargesListByBillingAccountGroupByCustomerIdModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/1234:56789";
        const startDate = "2019-09-01";
        const endDate = "2019-09-30";
        const apply = "groupby((properties/customerId))";
        const options = { startDate, endDate, apply };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernBillingAccountGroupByInvoiceSectionId.json
 */
function chargesListByBillingAccountGroupByInvoiceSectionIdModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/1234:56789/billingProfiles/42425";
        const startDate = "2019-09-01";
        const endDate = "2019-09-30";
        const apply = "groupby((properties/invoiceSectionId))";
        const options = { startDate, endDate, apply };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernBillingProfile.json
 */
function chargesListByBillingProfileModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234:56789/billingProfiles/2460";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernBillingProfileGroupByInvoiceSectionId.json
 */
function chargesListByBillingProfileGroupByInvoiceSectionIdModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/1234:56789/billingProfiles/42425";
        const startDate = "2019-09-01";
        const endDate = "2019-09-30";
        const apply = "groupby((properties/invoiceSectionId))";
        const options = { startDate, endDate, apply };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernBillingProfileInvoiceSection.json
 */
function chargesListByBillingProfileInvoiceSectionModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/billingAccounts/1234:56789/billingProfiles/42425/invoiceSections/67890";
        const startDate = "2019-09-01";
        const endDate = "2019-10-31";
        const options = { startDate, endDate };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernCustomer.json
 */
function chargesListByCustomerModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234:56789/customers/67890";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListForDepartmentFilterByStartEndDate.json
 */
function chargesListByDepartmentLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234/departments/42425";
        const filter = "usageStart eq '2018-04-01' AND usageEnd eq '2018-05-30'";
        const options = { filter };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListByModernInvoiceSectionId.json
 */
function chargesListByInvoiceSectionIdModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234:56789/invoiceSections/97531";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Lists the charges based for the defined scope.
 *
 * @summary Lists the charges based for the defined scope.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ChargesListForEnrollmentAccountFilterByStartEndDate.json
 */
function chargesListForEnrollmentAccountLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234/enrollmentAccounts/42425";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.charges.list(scope);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        changesForBillingPeriodByDepartmentLegacy();
        changesForBillingPeriodByEnrollmentAccountLegacy();
        chargesListByBillingAccountModern();
        chargesListByBillingAccountGroupByBillingProfileIdModern();
        chargesListByBillingAccountGroupByCustomerIdModern();
        chargesListByBillingAccountGroupByInvoiceSectionIdModern();
        chargesListByBillingProfileModern();
        chargesListByBillingProfileGroupByInvoiceSectionIdModern();
        chargesListByBillingProfileInvoiceSectionModern();
        chargesListByCustomerModern();
        chargesListByDepartmentLegacy();
        chargesListByInvoiceSectionIdModern();
        chargesListForEnrollmentAccountLegacy();
    });
}
main().catch(console.error);
//# sourceMappingURL=chargesListSample.js.map