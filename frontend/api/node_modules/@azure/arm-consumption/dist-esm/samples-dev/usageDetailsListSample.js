/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ConsumptionManagementClient } from "@azure/arm-consumption";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByBillingAccount.json
 */
function billingAccountUsageDetailsListLegacy() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByMCABillingAccount.json
 */
function billingAccountUsageDetailsListModern() {
    var e_2, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234:56789";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListForBillingPeriodByBillingAccount.json
 */
function billingAccountUsageDetailsListForBillingPeriodLegacy() {
    var e_3, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByMCABillingProfile.json
 */
function billingProfileUsageDetailsListModern() {
    var e_4, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234:56789/billingProfiles/2468";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByMCACustomer.json
 */
function customerUsageDetailsListModern() {
    var e_5, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234:56789/customers/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByDepartment.json
 */
function departmentUsageDetailsListLegacy() {
    var e_6, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/Departments/1234";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListForBillingPeriodByDepartment.json
 */
function departmentUsageDetailsListForBillingPeriodLegacy() {
    var e_7, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/Departments/1234";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByEnrollmentAccount.json
 */
function enrollmentAccountUsageDetailsListLegacy() {
    var e_8, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/EnrollmentAccounts/1234";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListForBillingPeriodByEnrollmentAccount.json
 */
function enrollmentAccountUsageDetailsListForBillingPeriodLegacy() {
    var e_9, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/EnrollmentAccounts/1234";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_9) throw e_9.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByMCAInvoiceSection.json
 */
function invoiceSectionUsageDetailsListModern() {
    var e_10, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Billing/BillingAccounts/1234:56789/invoiceSections/98765";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_10) throw e_10.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByManagementGroup.json
 */
function managementGroupUsageDetailsListLegacy() {
    var e_11, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_11) throw e_11.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListForBillingPeriodByManagementGroup.json
 */
function managementGroupUsageDetailsListForBillingPeriodLegacy() {
    var e_12, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_12_1) { e_12 = { error: e_12_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_12) throw e_12.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsExpand.json
 */
function usageDetailsExpandLegacy() {
    var e_13, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const expand = "meterDetails,additionalInfo";
        const filter = "tags eq 'dev:tools'";
        const top = 1;
        const options = { expand, filter, top };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_13) throw e_13.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsList.json
 */
function usageDetailsListLegacy() {
    var e_14, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_14_1) { e_14 = { error: e_14_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_14) throw e_14.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByMetricActualCost.json
 */
function usageDetailsListByMetricActualCostLegacy() {
    var e_15, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const metric = "actualcost";
        const options = { metric };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_15_1) { e_15 = { error: e_15_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_15) throw e_15.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByMetricAmortizedCost.json
 */
function usageDetailsListByMetricAmortizedCostLegacy() {
    var e_16, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const metric = "amortizedcost";
        const options = { metric };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_16_1) { e_16 = { error: e_16_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_16) throw e_16.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListByMetricUsage.json
 */
function usageDetailsListByMetricUsageLegacy() {
    var e_17, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const metric = "usage";
        const options = { metric };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_17_1) { e_17 = { error: e_17_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_17) throw e_17.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListFilterByTag.json
 */
function usageDetailsListFilterByTagLegacy() {
    var e_18, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const filter = "tags eq 'dev:tools'";
        const options = { filter };
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_18_1) { e_18 = { error: e_18_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_18) throw e_18.error; }
        }
        console.log(resArray);
    });
}
/**
 * This sample demonstrates how to Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 *
 * @summary Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/UsageDetailsListForBillingPeriod.json
 */
function usageDetailsListForBillingPeriodLegacy() {
    var e_19, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "subscriptions/00000000-0000-0000-0000-000000000000";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.usageDetails.list(scope)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_19_1) { e_19 = { error: e_19_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_19) throw e_19.error; }
        }
        console.log(resArray);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        billingAccountUsageDetailsListLegacy();
        billingAccountUsageDetailsListModern();
        billingAccountUsageDetailsListForBillingPeriodLegacy();
        billingProfileUsageDetailsListModern();
        customerUsageDetailsListModern();
        departmentUsageDetailsListLegacy();
        departmentUsageDetailsListForBillingPeriodLegacy();
        enrollmentAccountUsageDetailsListLegacy();
        enrollmentAccountUsageDetailsListForBillingPeriodLegacy();
        invoiceSectionUsageDetailsListModern();
        managementGroupUsageDetailsListLegacy();
        managementGroupUsageDetailsListForBillingPeriodLegacy();
        usageDetailsExpandLegacy();
        usageDetailsListLegacy();
        usageDetailsListByMetricActualCostLegacy();
        usageDetailsListByMetricAmortizedCostLegacy();
        usageDetailsListByMetricUsageLegacy();
        usageDetailsListFilterByTagLegacy();
        usageDetailsListForBillingPeriodLegacy();
    });
}
main().catch(console.error);
//# sourceMappingURL=usageDetailsListSample.js.map