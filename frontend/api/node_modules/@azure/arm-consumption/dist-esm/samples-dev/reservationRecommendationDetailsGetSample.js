/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ConsumptionManagementClient } from "@azure/arm-consumption";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Details of a reservation recommendation for what-if analysis of reserved instances.
 *
 * @summary Details of a reservation recommendation for what-if analysis of reserved instances.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ReservationRecommendationDetailsByBillingAccount.json
 */
function reservationRecommendationsByBillingAccountLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "Shared";
        const region = "eastus";
        const term = "P1Y";
        const lookBackPeriod = "Last60Days";
        const product = "Standard_DS14_v2";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.reservationRecommendationDetails.get(scope, region, term, lookBackPeriod, product);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Details of a reservation recommendation for what-if analysis of reserved instances.
 *
 * @summary Details of a reservation recommendation for what-if analysis of reserved instances.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ReservationRecommendationDetailsByBillingProfile.json
 */
function reservationRecommendationsByBillingProfileModern() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "Shared";
        const region = "australiaeast";
        const term = "P1Y";
        const lookBackPeriod = "Last7Days";
        const product = "Standard_B2s";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.reservationRecommendationDetails.get(scope, region, term, lookBackPeriod, product);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Details of a reservation recommendation for what-if analysis of reserved instances.
 *
 * @summary Details of a reservation recommendation for what-if analysis of reserved instances.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ReservationRecommendationDetailsByResourceGroup.json
 */
function reservationRecommendationsByResourceGroupLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "Single";
        const region = "westus";
        const term = "P3Y";
        const lookBackPeriod = "Last30Days";
        const product = "Standard_DS13_v2";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.reservationRecommendationDetails.get(scope, region, term, lookBackPeriod, product);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Details of a reservation recommendation for what-if analysis of reserved instances.
 *
 * @summary Details of a reservation recommendation for what-if analysis of reserved instances.
 * x-ms-original-file: specification/consumption/resource-manager/Microsoft.Consumption/stable/2021-10-01/examples/ReservationRecommendationDetailsBySubscription.json
 */
function reservationRecommendationsBySubscriptionLegacy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONSUMPTION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "Single";
        const region = "westus";
        const term = "P3Y";
        const lookBackPeriod = "Last30Days";
        const product = "Standard_DS13_v2";
        const credential = new DefaultAzureCredential();
        const client = new ConsumptionManagementClient(credential, subscriptionId);
        const result = yield client.reservationRecommendationDetails.get(scope, region, term, lookBackPeriod, product);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        reservationRecommendationsByBillingAccountLegacy();
        reservationRecommendationsByBillingProfileModern();
        reservationRecommendationsByResourceGroupLegacy();
        reservationRecommendationsBySubscriptionLegacy();
    });
}
main().catch(console.error);
//# sourceMappingURL=reservationRecommendationDetailsGetSample.js.map