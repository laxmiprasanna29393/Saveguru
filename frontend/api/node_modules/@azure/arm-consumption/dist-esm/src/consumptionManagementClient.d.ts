import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { UsageDetails, Marketplaces, Budgets, Tags, Charges, Balances, ReservationsSummaries, ReservationsDetails, ReservationRecommendations, ReservationRecommendationDetails, ReservationTransactions, PriceSheet, Operations, AggregatedCost, EventsOperations, LotsOperations, Credits } from "./operationsInterfaces";
import { ConsumptionManagementClientOptionalParams } from "./models";
export declare class ConsumptionManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the ConsumptionManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure Subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ConsumptionManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    usageDetails: UsageDetails;
    marketplaces: Marketplaces;
    budgets: Budgets;
    tags: Tags;
    charges: Charges;
    balances: Balances;
    reservationsSummaries: ReservationsSummaries;
    reservationsDetails: ReservationsDetails;
    reservationRecommendations: ReservationRecommendations;
    reservationRecommendationDetails: ReservationRecommendationDetails;
    reservationTransactions: ReservationTransactions;
    priceSheet: PriceSheet;
    operations: Operations;
    aggregatedCost: AggregatedCost;
    eventsOperations: EventsOperations;
    lotsOperations: LotsOperations;
    credits: Credits;
}
//# sourceMappingURL=consumptionManagementClient.d.ts.map