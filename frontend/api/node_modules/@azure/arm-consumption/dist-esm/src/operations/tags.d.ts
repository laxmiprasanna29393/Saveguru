import { Tags } from "../operationsInterfaces";
import { ConsumptionManagementClient } from "../consumptionManagementClient";
import { TagsGetOptionalParams, TagsGetResponse } from "../models";
/** Class containing Tags operations. */
export declare class TagsImpl implements Tags {
    private readonly client;
    /**
     * Initialize a new instance of the class Tags class.
     * @param client Reference to the service client
     */
    constructor(client: ConsumptionManagementClient);
    /**
     * Get all available tag keys for the defined scope
     * @param scope The scope associated with tags operations. This includes
     *              '/subscriptions/{subscriptionId}/' for subscription scope,
     *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
     *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
     *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
     *              Department scope,
     *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
     *              for EnrollmentAccount scope and
     *              '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope..
     * @param options The options parameters.
     */
    get(scope: string, options?: TagsGetOptionalParams): Promise<TagsGetResponse>;
}
//# sourceMappingURL=tags.d.ts.map