import { Balances } from "../operationsInterfaces";
import { ConsumptionManagementClient } from "../consumptionManagementClient";
import { BalancesGetByBillingAccountOptionalParams, BalancesGetByBillingAccountResponse, BalancesGetForBillingPeriodByBillingAccountOptionalParams, BalancesGetForBillingPeriodByBillingAccountResponse } from "../models";
/** Class containing Balances operations. */
export declare class BalancesImpl implements Balances {
    private readonly client;
    /**
     * Initialize a new instance of the class Balances class.
     * @param client Reference to the service client
     */
    constructor(client: ConsumptionManagementClient);
    /**
     * Gets the balances for a scope by billingAccountId. Balances are available via this API only for May
     * 1, 2014 or later.
     * @param billingAccountId BillingAccount ID
     * @param options The options parameters.
     */
    getByBillingAccount(billingAccountId: string, options?: BalancesGetByBillingAccountOptionalParams): Promise<BalancesGetByBillingAccountResponse>;
    /**
     * Gets the balances for a scope by billing period and billingAccountId. Balances are available via
     * this API only for May 1, 2014 or later.
     * @param billingAccountId BillingAccount ID
     * @param billingPeriodName Billing Period Name.
     * @param options The options parameters.
     */
    getForBillingPeriodByBillingAccount(billingAccountId: string, billingPeriodName: string, options?: BalancesGetForBillingPeriodByBillingAccountOptionalParams): Promise<BalancesGetForBillingPeriodByBillingAccountResponse>;
}
//# sourceMappingURL=balances.d.ts.map