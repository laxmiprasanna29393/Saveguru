/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { Budget as BudgetMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const scope = {
    parameterPath: "scope",
    mapper: {
        serializedName: "scope",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const expand = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String"
        }
    }
};
export const filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export const skiptoken = {
    parameterPath: ["options", "skiptoken"],
    mapper: {
        serializedName: "$skiptoken",
        type: {
            name: "String"
        }
    }
};
export const top = {
    parameterPath: ["options", "top"],
    mapper: {
        constraints: {
            InclusiveMaximum: 1000,
            InclusiveMinimum: 1
        },
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-10-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const metric = {
    parameterPath: ["options", "metric"],
    mapper: {
        serializedName: "metric",
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const budgetName = {
    parameterPath: "budgetName",
    mapper: {
        serializedName: "budgetName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: BudgetMapper
};
export const startDate = {
    parameterPath: ["options", "startDate"],
    mapper: {
        serializedName: "startDate",
        type: {
            name: "String"
        }
    }
};
export const endDate = {
    parameterPath: ["options", "endDate"],
    mapper: {
        serializedName: "endDate",
        type: {
            name: "String"
        }
    }
};
export const apply = {
    parameterPath: ["options", "apply"],
    mapper: {
        serializedName: "$apply",
        type: {
            name: "String"
        }
    }
};
export const billingAccountId = {
    parameterPath: "billingAccountId",
    mapper: {
        serializedName: "billingAccountId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const billingPeriodName = {
    parameterPath: "billingPeriodName",
    mapper: {
        serializedName: "billingPeriodName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const reservationOrderId = {
    parameterPath: "reservationOrderId",
    mapper: {
        serializedName: "reservationOrderId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const grain = {
    parameterPath: "grain",
    mapper: {
        serializedName: "grain",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const reservationId = {
    parameterPath: "reservationId",
    mapper: {
        serializedName: "reservationId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const reservationId1 = {
    parameterPath: ["options", "reservationId"],
    mapper: {
        serializedName: "reservationId",
        type: {
            name: "String"
        }
    }
};
export const reservationOrderId1 = {
    parameterPath: ["options", "reservationOrderId"],
    mapper: {
        serializedName: "reservationOrderId",
        type: {
            name: "String"
        }
    }
};
export const filter1 = {
    parameterPath: "filter",
    mapper: {
        serializedName: "$filter",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const region = {
    parameterPath: "region",
    mapper: {
        serializedName: "region",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const term = {
    parameterPath: "term",
    mapper: {
        serializedName: "term",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const lookBackPeriod = {
    parameterPath: "lookBackPeriod",
    mapper: {
        serializedName: "lookBackPeriod",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const product = {
    parameterPath: "product",
    mapper: {
        serializedName: "product",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const billingProfileId = {
    parameterPath: "billingProfileId",
    mapper: {
        serializedName: "billingProfileId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const managementGroupId = {
    parameterPath: "managementGroupId",
    mapper: {
        serializedName: "managementGroupId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const startDate1 = {
    parameterPath: "startDate",
    mapper: {
        serializedName: "startDate",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const endDate1 = {
    parameterPath: "endDate",
    mapper: {
        serializedName: "endDate",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map