{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/usageDetails.ts","../src/operations/marketplaces.ts","../src/operations/budgets.ts","../src/operations/tags.ts","../src/operations/charges.ts","../src/operations/balances.ts","../src/operations/reservationsSummaries.ts","../src/operations/reservationsDetails.ts","../src/operations/reservationRecommendations.ts","../src/operations/reservationRecommendationDetails.ts","../src/operations/reservationTransactions.ts","../src/operations/priceSheet.ts","../src/operations/operations.ts","../src/operations/aggregatedCost.ts","../src/operations/eventsOperations.ts","../src/operations/lotsOperations.ts","../src/operations/credits.ts","../src/consumptionManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type LegacyReservationRecommendationPropertiesUnion =\n  | LegacyReservationRecommendationProperties\n  | LegacySingleScopeReservationRecommendationProperties\n  | LegacySharedScopeReservationRecommendationProperties;\nexport type UsageDetailUnion =\n  | UsageDetail\n  | LegacyUsageDetail\n  | ModernUsageDetail;\nexport type ReservationRecommendationUnion =\n  | ReservationRecommendation\n  | LegacyReservationRecommendation\n  | ModernReservationRecommendation;\nexport type ChargeSummaryUnion =\n  | ChargeSummary\n  | LegacyChargeSummary\n  | ModernChargeSummary;\n\n/** Result of listing usage details. It contains a list of available usage details in reverse chronological order by billing period. */\nexport interface UsageDetailsListResult {\n  /**\n   * The list of usage details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: UsageDetailUnion[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The Resource model definition. */\nexport interface Resource {\n  /**\n   * The full qualified ARM ID of an event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The ID that uniquely identifies an event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The etag for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource tags.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tags?: { [propertyName: string]: string };\n}\n\n/**\n * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n *\n * Some Error responses:\n *\n *  * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header.\n *\n *  * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.\n */\nexport interface ErrorResponse {\n  /** The details of the error. */\n  error?: ErrorDetails;\n}\n\n/** The details of the error. */\nexport interface ErrorDetails {\n  /**\n   * Error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Error message indicating why the operation failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Result of listing marketplaces. It contains a list of available marketplaces in reverse chronological order by billing period. */\nexport interface MarketplacesListResult {\n  /**\n   * The list of marketplaces.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Marketplace[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of listing budgets. It contains a list of available budgets in the scope provided. */\nexport interface BudgetsListResult {\n  /**\n   * The list of budgets.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Budget[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The start and end date for a budget. */\nexport interface BudgetTimePeriod {\n  /** The start date for the budget. */\n  startDate: Date;\n  /** The end date for the budget. If not provided, we default this to 10 years from the start date. */\n  endDate?: Date;\n}\n\n/** May be used to filter budgets by resource group, resource, or meter. */\nexport interface BudgetFilter {\n  /** The logical \"AND\" expression. Must have at least 2 items. */\n  and?: BudgetFilterProperties[];\n  /** The logical \"NOT\" expression. */\n  not?: BudgetFilterProperties;\n  /** Has comparison expression for a dimension */\n  dimensions?: BudgetComparisonExpression;\n  /** Has comparison expression for a tag */\n  tags?: BudgetComparisonExpression;\n}\n\n/** The Dimensions or Tags to filter a budget by. */\nexport interface BudgetFilterProperties {\n  /** Has comparison expression for a dimension */\n  dimensions?: BudgetComparisonExpression;\n  /** Has comparison expression for a tag */\n  tags?: BudgetComparisonExpression;\n}\n\n/** The comparison expression to be used in the budgets. */\nexport interface BudgetComparisonExpression {\n  /** The name of the column to use in comparison. */\n  name: string;\n  /** The operator to use for comparison. */\n  operator: BudgetOperatorType;\n  /** Array of values to use for comparison */\n  values: string[];\n}\n\n/** The current amount of cost which is being tracked for a budget. */\nexport interface CurrentSpend {\n  /**\n   * The total amount of cost which is being tracked by the budget.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amount?: number;\n  /**\n   * The unit of measure for the budget amount.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n}\n\n/** The notification associated with a budget. */\nexport interface Notification {\n  /** The notification is enabled or not. */\n  enabled: boolean;\n  /** The comparison operator. */\n  operator: OperatorType;\n  /** Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000. */\n  threshold: number;\n  /** Email addresses to send the budget notification to when the threshold is exceeded. Must have at least one contact email or contact group specified at the Subscription or Resource Group scopes. All other scopes must have at least one contact email specified. */\n  contactEmails: string[];\n  /** Contact roles to send the budget notification to when the threshold is exceeded. */\n  contactRoles?: string[];\n  /** Action groups to send the budget notification to when the threshold is exceeded. Must be provided as a fully qualified Azure resource id. Only supported at Subscription or Resource Group scopes. */\n  contactGroups?: string[];\n  /** The type of threshold */\n  thresholdType?: ThresholdType;\n  /** Language in which the recipient will receive the notification */\n  locale?: CultureCode;\n}\n\n/** The forecasted cost which is being tracked for a budget. */\nexport interface ForecastSpend {\n  /**\n   * The forecasted cost for the total time period which is being tracked by the budget. This value is only provided if the budget contains a forecast alert type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amount?: number;\n  /**\n   * The unit of measure for the budget amount.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n}\n\n/** The Resource model definition. */\nexport interface ProxyResource {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not. */\n  eTag?: string;\n}\n\n/** The tag resource. */\nexport interface Tag {\n  /** Tag key. */\n  key?: string;\n  /** Tag values. */\n  value?: string[];\n}\n\n/** Result of listing charge summary. */\nexport interface ChargesListResult {\n  /**\n   * The list of charge summary\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ChargeSummaryUnion[];\n}\n\nexport interface BalancePropertiesNewPurchasesDetailsItem {\n  /**\n   * the name of new purchase.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * the value of new purchase.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n}\n\nexport interface BalancePropertiesAdjustmentDetailsItem {\n  /**\n   * the name of new adjustment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * the value of new adjustment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n}\n\n/** Result of listing reservation summaries. */\nexport interface ReservationSummariesListResult {\n  /**\n   * The list of reservation summaries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ReservationSummary[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of listing reservation details. */\nexport interface ReservationDetailsListResult {\n  /**\n   * The list of reservation details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ReservationDetail[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of listing reservation recommendations. */\nexport interface ReservationRecommendationsListResult {\n  /**\n   * The list of reservation recommendations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ReservationRecommendationUnion[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n  /**\n   * The link (url) to the previous page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousLink?: string;\n}\n\n/** The Resource model definition. */\nexport interface ResourceAttributes {\n  /**\n   * Resource location\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Resource sku\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: string;\n}\n\n/** Details of the resource. */\nexport interface ReservationRecommendationDetailsResourceProperties {\n  /**\n   * List of subscriptions for which the reservation is applied.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly appliedScopes?: string[];\n  /**\n   * On demand rate of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly onDemandRate?: number;\n  /**\n   * Azure product ex: Standard_E8s_v3 etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly product?: string;\n  /**\n   * Azure resource region ex:EastUS, WestUS etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly region?: string;\n  /**\n   * Reservation rate of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationRate?: number;\n  /**\n   * The azure resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n}\n\n/** Details of the estimated savings. */\nexport interface ReservationRecommendationDetailsSavingsProperties {\n  /** List of calculated savings. */\n  calculatedSavings?: ReservationRecommendationDetailsCalculatedSavingsProperties[];\n  /**\n   * Number of days of usage to look back used for computing the recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lookBackPeriod?: number;\n  /**\n   * Number of recommended units of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedQuantity?: number;\n  /**\n   * Term period of the reservation, ex: P1Y or P3Y.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationOrderTerm?: string;\n  /**\n   * Type of savings, ex: instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly savingsType?: string;\n  /**\n   * Measurement unit ex: hour etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitOfMeasure?: string;\n}\n\n/** Details of estimated savings. */\nexport interface ReservationRecommendationDetailsCalculatedSavingsProperties {\n  /**\n   * The cost without reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly onDemandCost?: number;\n  /**\n   * The difference between total reservation cost and reservation cost.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly overageCost?: number;\n  /**\n   * The quantity for calculated savings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quantity?: number;\n  /**\n   * The exact cost of the estimated usage using reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationCost?: number;\n  /**\n   * The cost of the suggested quantity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalReservationCost?: number;\n  /** The number of reserved units used to calculate savings. Always 1 for virtual machines. */\n  reservedUnitCount?: number;\n  /**\n   * The amount saved by purchasing the recommended quantity of reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly savings?: number;\n}\n\n/** Details about historical usage data that has been used for computing the recommendation. */\nexport interface ReservationRecommendationDetailsUsageProperties {\n  /**\n   * The first usage date used for looking back for computing the recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firstConsumptionDate?: string;\n  /**\n   * The last usage date used for looking back for computing the recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastConsumptionDate?: string;\n  /**\n   * What the usage data values represent ex: virtual machine instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lookBackUnitType?: string;\n  /**\n   * The breakdown of historical resource usage.  The values are in the order of usage between the firstConsumptionDate and the lastConsumptionDate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageData?: number[];\n  /**\n   * The grain of the values represented in the usage data ex: hourly.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageGrain?: string;\n}\n\n/**\n * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n *\n * Some Error responses:\n *\n *  * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header.\n *\n *  * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.\n */\nexport interface HighCasedErrorResponse {\n  /** The details of the error. */\n  error?: HighCasedErrorDetails;\n}\n\n/** The details of the error. */\nexport interface HighCasedErrorDetails {\n  /**\n   * Error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Error message indicating why the operation failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Result of listing reservation recommendations. */\nexport interface ReservationTransactionsListResult {\n  /**\n   * The list of reservation recommendations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ReservationTransaction[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The Resource model definition. */\nexport interface ReservationTransactionResource {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Resource tags.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tags?: string[];\n}\n\n/** Result of listing reservation recommendations. */\nexport interface ModernReservationTransactionsListResult {\n  /**\n   * The list of reservation recommendations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ModernReservationTransaction[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of the price sheet. */\nexport interface PriceSheetProperties {\n  /**\n   * The id of the billing period resource that the usage belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodId?: string;\n  /**\n   * The meter id (GUID)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * The details about the meter. By default this is not populated, unless it's specified in $expand.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterDetails?: MeterDetails;\n  /**\n   * Unit of measure\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitOfMeasure?: string;\n  /**\n   * Included quality for an offer\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly includedQuantity?: number;\n  /**\n   * Part Number\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partNumber?: string;\n  /**\n   * Unit Price\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitPrice?: number;\n  /**\n   * Currency Code\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currencyCode?: string;\n  /**\n   * Offer Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly offerId?: string;\n}\n\n/** The properties of the meter detail. */\nexport interface MeterDetails {\n  /**\n   * The name of the meter, within the given meter category\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterName?: string;\n  /**\n   * The category of the meter, for example, 'Cloud services', 'Networking', etc..\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterCategory?: string;\n  /**\n   * The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterSubCategory?: string;\n  /**\n   * The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * The location in which the Azure service is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterLocation?: string;\n  /**\n   * The total included quantity associated with the offer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalIncludedQuantity?: number;\n  /**\n   * The pretax listing price.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pretaxStandardRate?: number;\n  /**\n   * The name of the service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceName?: string;\n  /**\n   * The service tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceTier?: string;\n}\n\n/** Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of consumption operations supported by the Microsoft.Consumption resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A Consumption REST API operation. */\nexport interface Operation {\n  /**\n   * Operation Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Operation name: {provider}/{resource}/{operation}.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft.Consumption.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * Resource on which the operation is performed: UsageDetail, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * Operation type: Read, write, delete, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * Description of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** Result of listing event summary. */\nexport interface Events {\n  /**\n   * The list of event summary.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: EventSummary[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The amount plus currency . */\nexport interface Amount {\n  /**\n   * Amount currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /**\n   * Amount.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n}\n\n/** The reseller properties. */\nexport interface Reseller {\n  /**\n   * The reseller property ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resellerId?: string;\n  /**\n   * The reseller property description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resellerDescription?: string;\n}\n\n/** Result of listing lot summary. */\nexport interface Lots {\n  /**\n   * The list of lot summary.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: LotSummary[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Summary of credit balances. */\nexport interface CreditBalanceSummary {\n  /**\n   * Estimated balance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedBalance?: Amount;\n  /**\n   * Current balance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentBalance?: Amount;\n  /**\n   * Estimated balance in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedBalanceInBillingCurrency?: AmountWithExchangeRate;\n}\n\n/** The properties of the meter detail. */\nexport interface MeterDetailsResponse {\n  /**\n   * The name of the meter, within the given meter category\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterName?: string;\n  /**\n   * The category of the meter, for example, 'Cloud services', 'Networking', etc..\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterCategory?: string;\n  /**\n   * The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterSubCategory?: string;\n  /**\n   * The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitOfMeasure?: string;\n  /**\n   * The service family.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceFamily?: string;\n}\n\n/** The properties of the reservation recommendation. */\nexport interface LegacyReservationRecommendationProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scope: \"Single\" | \"Shared\";\n  /**\n   * The number of days of usage to look back for recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lookBackPeriod?: string;\n  /**\n   * The instance Flexibility Ratio.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityRatio?: number;\n  /**\n   * The instance Flexibility Group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityGroup?: string;\n  /**\n   * The normalized Size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly normalizedSize?: string;\n  /**\n   * The recommended Quantity Normalized.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedQuantityNormalized?: number;\n  /**\n   * The meter id (GUID)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * The azure resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * RI recommendations in one or three year terms.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly term?: string;\n  /**\n   * The total amount of cost without reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costWithNoReservedInstances?: number;\n  /**\n   * Recommended quality for reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedQuantity?: number;\n  /**\n   * The total amount of cost with reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalCostWithReservedInstances?: number;\n  /**\n   * Total estimated savings with reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly netSavings?: number;\n  /**\n   * The usage date for looking back.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firstUsageDate?: Date;\n  /**\n   * List of sku properties\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuProperties?: SkuProperty[];\n}\n\n/** The Sku property */\nexport interface SkuProperty {\n  /**\n   * The name of sku property.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The value of sku property.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** The properties of the price sheet download. */\nexport interface DownloadProperties {\n  /**\n   * The link (url) to download the pricesheet.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly downloadUrl?: string;\n  /**\n   * Download link validity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validTill?: string;\n}\n\n/** An usage detail resource. */\nexport interface UsageDetail extends Resource {\n  /** Specifies the kind of usage details. */\n  kind: UsageDetailsKind;\n}\n\n/** A marketplace resource. */\nexport interface Marketplace extends Resource {\n  /**\n   * The id of the billing period resource that the usage belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodId?: string;\n  /**\n   * The start of the date time range covered by the usage detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageStart?: Date;\n  /**\n   * The end of the date time range covered by the usage detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageEnd?: Date;\n  /**\n   * The marketplace resource rate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceRate?: number;\n  /**\n   * The type of offer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly offerName?: string;\n  /**\n   * The name of resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGroup?: string;\n  /**\n   * Additional information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: string;\n  /**\n   * The order number.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly orderNumber?: string;\n  /**\n   * The name of the resource instance that the usage is about.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceName?: string;\n  /**\n   * The uri of the resource instance that the usage is about.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceId?: string;\n  /**\n   * The ISO currency in which the meter is charged, for example, USD.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /**\n   * The quantity of usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly consumedQuantity?: number;\n  /**\n   * The unit of measure.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitOfMeasure?: string;\n  /**\n   * The amount of cost before tax.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pretaxCost?: number;\n  /**\n   * The estimated usage is subject to change.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isEstimated?: boolean;\n  /**\n   * The meter id (GUID).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * Subscription guid.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionGuid?: string;\n  /**\n   * Subscription name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionName?: string;\n  /**\n   * Account name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountName?: string;\n  /**\n   * Department name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly departmentName?: string;\n  /**\n   * Consumed service name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly consumedService?: string;\n  /**\n   * The cost center of this department if it is a department and a costcenter exists\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costCenter?: string;\n  /**\n   * Additional details of this usage item. By default this is not populated, unless it's specified in $expand.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalProperties?: string;\n  /**\n   * The name of publisher.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publisherName?: string;\n  /**\n   * The name of plan.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly planName?: string;\n  /**\n   * Flag indicating whether this is a recurring charge or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isRecurringCharge?: boolean;\n}\n\n/** A balance resource. */\nexport interface Balance extends Resource {\n  /**\n   * The ISO currency in which the meter is charged, for example, USD.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /**\n   * The beginning balance for the billing period.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly beginningBalance?: number;\n  /**\n   * The ending balance for the billing period (for open periods this will be updated daily).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endingBalance?: number;\n  /**\n   * Total new purchase amount.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly newPurchases?: number;\n  /**\n   * Total adjustment amount.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adjustments?: number;\n  /**\n   * Total Commitment usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly utilized?: number;\n  /**\n   * Overage for Azure services.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceOverage?: number;\n  /**\n   * Charges Billed separately.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly chargesBilledSeparately?: number;\n  /**\n   * serviceOverage + chargesBilledSeparately.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalOverage?: number;\n  /**\n   * Azure service commitment + total Overage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalUsage?: number;\n  /**\n   * Total charges for Azure Marketplace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureMarketplaceServiceCharges?: number;\n  /** The billing frequency. */\n  billingFrequency?: BillingFrequency;\n  /**\n   * Price is hidden or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly priceHidden?: boolean;\n  /**\n   * List of new purchases.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly newPurchasesDetails?: BalancePropertiesNewPurchasesDetailsItem[];\n  /**\n   * List of Adjustments (Promo credit, SIE credit etc.).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adjustmentDetails?: BalancePropertiesAdjustmentDetailsItem[];\n}\n\n/** reservation summary resource. */\nexport interface ReservationSummary extends Resource {\n  /**\n   * The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationOrderId?: string;\n  /**\n   * The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationId?: string;\n  /**\n   * This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuName?: string;\n  /**\n   * This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservedHours?: number;\n  /**\n   * Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageDate?: Date;\n  /**\n   * Total used hours by the reservation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usedHours?: number;\n  /**\n   * This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minUtilizationPercentage?: number;\n  /**\n   * This is average utilization for the entire time range. (day or month depending on the grain)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly avgUtilizationPercentage?: number;\n  /**\n   * This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxUtilizationPercentage?: number;\n  /**\n   * The reservation kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * This is the purchased quantity for the reservationId.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purchasedQuantity?: number;\n  /**\n   * This is the remaining quantity for the reservationId.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingQuantity?: number;\n  /**\n   * This is the total count of instances that are reserved for the reservationId.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalReservedQuantity?: number;\n  /**\n   * This is the used quantity for the reservationId.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usedQuantity?: number;\n  /**\n   * This is the utilized percentage for the reservation Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly utilizedPercentage?: number;\n}\n\n/** reservation detail resource. */\nexport interface ReservationDetail extends Resource {\n  /**\n   * The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationOrderId?: string;\n  /**\n   * The instance Flexibility Ratio.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityRatio?: string;\n  /**\n   * The instance Flexibility Group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityGroup?: string;\n  /**\n   * The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationId?: string;\n  /**\n   * This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuName?: string;\n  /**\n   * This is the total hours reserved for the day. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservedHours?: number;\n  /**\n   * The date on which consumption occurred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageDate?: Date;\n  /**\n   * This is the total hours used by the instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usedHours?: number;\n  /**\n   * This identifier is the name of the resource or the fully qualified Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceId?: string;\n  /**\n   * This is the total count of instances that are reserved for the reservationId.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalReservedQuantity?: number;\n  /**\n   * The reservation kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n}\n\n/** A reservation recommendation resource. */\nexport interface ReservationRecommendation\n  extends Resource,\n    ResourceAttributes {\n  /** Specifies the kind of reservation recommendation. */\n  kind: ReservationRecommendationKind;\n}\n\n/** Reservation recommendation details. */\nexport interface ReservationRecommendationDetailsModel extends Resource {\n  /** Resource Location. */\n  location?: string;\n  /** Resource sku */\n  sku?: string;\n  /**\n   * An ISO 4217 currency code identifier for the costs and savings\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /**\n   * Resource specific properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: ReservationRecommendationDetailsResourceProperties;\n  /**\n   * Resource Group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGroup?: string;\n  /**\n   * Savings information for the recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly savings?: ReservationRecommendationDetailsSavingsProperties;\n  /**\n   * Scope of the reservation, ex: Single or Shared.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scope?: string;\n  /**\n   * Historical usage details used to calculate the estimated savings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usage?: ReservationRecommendationDetailsUsageProperties;\n}\n\n/** An pricesheet resource. */\nexport interface PriceSheetResult extends Resource {\n  /**\n   * Price sheet\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pricesheets?: PriceSheetProperties[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n  /**\n   * Pricesheet download details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly download?: MeterDetails;\n}\n\n/** A management group aggregated cost resource. */\nexport interface ManagementGroupAggregatedCostResult extends Resource {\n  /**\n   * The id of the billing period resource that the aggregated cost belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodId?: string;\n  /**\n   * The start of the date time range covered by aggregated cost.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageStart?: Date;\n  /**\n   * The end of the date time range covered by the aggregated cost.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageEnd?: Date;\n  /**\n   * Azure Charges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureCharges?: number;\n  /**\n   * Marketplace Charges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly marketplaceCharges?: number;\n  /**\n   * Charges Billed Separately.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly chargesBilledSeparately?: number;\n  /**\n   * The ISO currency in which the meter is charged, for example, USD.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /** Children of a management group */\n  children?: ManagementGroupAggregatedCostResult[];\n  /** List of subscription Guids included in the calculation of aggregated cost */\n  includedSubscriptions?: string[];\n  /** List of subscription Guids excluded from the calculation of aggregated cost */\n  excludedSubscriptions?: string[];\n}\n\n/** A credit summary resource. */\nexport interface CreditSummary extends Resource {\n  /**\n   * Summary of balances associated with this credit summary.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly balanceSummary?: CreditBalanceSummary;\n  /**\n   * Pending credit adjustments.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pendingCreditAdjustments?: Amount;\n  /**\n   * Expired credit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiredCredit?: Amount;\n  /**\n   * Pending eligible charges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pendingEligibleCharges?: Amount;\n  /**\n   * The credit currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creditCurrency?: string;\n  /**\n   * The billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingCurrency?: string;\n  /**\n   * Credit's reseller.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reseller?: Reseller;\n  /**\n   * The eTag for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eTag?: string;\n}\n\n/** A budget resource. */\nexport interface Budget extends ProxyResource {\n  /** The category of the budget, whether the budget tracks cost or usage. */\n  category?: CategoryType;\n  /** The total amount of cost to track with the budget */\n  amount?: number;\n  /** The time covered by a budget. Tracking of the amount will be reset based on the time grain. BillingMonth, BillingQuarter, and BillingAnnual are only supported by WD customers */\n  timeGrain?: TimeGrainType;\n  /** Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date. */\n  timePeriod?: BudgetTimePeriod;\n  /** May be used to filter budgets by user-specified dimensions and/or tags. */\n  filter?: BudgetFilter;\n  /**\n   * The current amount of cost which is being tracked for a budget.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentSpend?: CurrentSpend;\n  /** Dictionary of notifications associated with the budget. Budget can have up to five notifications. */\n  notifications?: { [propertyName: string]: Notification };\n  /**\n   * The forecasted cost which is being tracked for a budget.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly forecastSpend?: ForecastSpend;\n}\n\n/** A resource listing all tags. */\nexport interface TagsResult extends ProxyResource {\n  /** A list of Tag. */\n  tags?: Tag[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n  /**\n   * The link (url) to the previous page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousLink?: string;\n}\n\n/** A charge summary resource. */\nexport interface ChargeSummary extends ProxyResource {\n  /** Specifies the kind of charge summary. */\n  kind: ChargeSummaryKind;\n}\n\n/** An event summary resource. */\nexport interface EventSummary extends ProxyResource {\n  /**\n   * The date of the event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly transactionDate?: Date;\n  /**\n   * The description of the event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The amount of new credit or commitment for NewCredit or SettleCharges event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly newCredit?: Amount;\n  /**\n   * The amount of balance adjustment. The property is not available for ConsumptionCommitment lots.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adjustments?: Amount;\n  /**\n   * The amount of expired credit or commitment for NewCredit or SettleCharges event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creditExpired?: Amount;\n  /**\n   * The amount of charges for events of type SettleCharges and PendingEligibleCharges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly charges?: Amount;\n  /**\n   * The balance after the event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly closedBalance?: Amount;\n  /** Identifies the type of the event. */\n  eventType?: EventType;\n  /**\n   * The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceNumber?: string;\n  /**\n   * The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileId?: string;\n  /**\n   * The display name of the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileDisplayName?: string;\n  /**\n   * The ID that uniquely identifies the lot for which the event happened.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lotId?: string;\n  /**\n   * Identifies the source of the lot for which the event happened.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lotSource?: string;\n  /**\n   * Amount of canceled credit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly canceledCredit?: Amount;\n  /**\n   * The credit currency of the event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creditCurrency?: string;\n  /**\n   * The billing currency of the event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingCurrency?: string;\n  /**\n   * The reseller of the event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reseller?: Reseller;\n  /**\n   * The amount of expired credit or commitment for NewCredit or SettleCharges event in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creditExpiredInBillingCurrency?: AmountWithExchangeRate;\n  /**\n   * The amount of new credit or commitment for NewCredit or SettleCharges event in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly newCreditInBillingCurrency?: AmountWithExchangeRate;\n  /**\n   * The amount of balance adjustment in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adjustmentsInBillingCurrency?: AmountWithExchangeRate;\n  /**\n   * The amount of charges for events of type SettleCharges and PendingEligibleCharges in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly chargesInBillingCurrency?: AmountWithExchangeRate;\n  /**\n   * The balance in billing currency after the event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly closedBalanceInBillingCurrency?: AmountWithExchangeRate;\n  /**\n   * The eTag for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eTagPropertiesETag?: string;\n}\n\n/** A lot summary resource. */\nexport interface LotSummary extends ProxyResource {\n  /**\n   * The original amount of a lot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly originalAmount?: Amount;\n  /**\n   * The balance as of the last invoice.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly closedBalance?: Amount;\n  /**\n   * The source of the lot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly source?: LotSource;\n  /**\n   * The date when the lot became effective.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startDate?: Date;\n  /**\n   * The expiration date of a lot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expirationDate?: Date;\n  /**\n   * The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly poNumber?: string;\n  /**\n   * The date when the lot was added.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purchasedDate?: Date;\n  /**\n   * The status of the lot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: Status;\n  /**\n   * The currency of the lot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creditCurrency?: string;\n  /**\n   * The billing currency of the lot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingCurrency?: string;\n  /**\n   * The original amount of a lot in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly originalAmountInBillingCurrency?: AmountWithExchangeRate;\n  /**\n   * The balance as of the last invoice in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly closedBalanceInBillingCurrency?: AmountWithExchangeRate;\n  /**\n   * The reseller of the lot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reseller?: Reseller;\n  /**\n   * The eTag for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eTagPropertiesETag?: string;\n}\n\n/** Reservation transaction resource. */\nexport interface ReservationTransaction extends ReservationTransactionResource {\n  /**\n   * The date of the transaction\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eventDate?: Date;\n  /**\n   * The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationOrderId?: string;\n  /**\n   * The description of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The type of the transaction (Purchase, Cancel, etc.)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eventType?: string;\n  /**\n   * The quantity of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quantity?: number;\n  /**\n   * The charge of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amount?: number;\n  /**\n   * The ISO currency in which the transaction is charged, for example, USD.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /**\n   * The name of the reservation order.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationOrderName?: string;\n  /**\n   * The purchasing enrollment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purchasingEnrollment?: string;\n  /**\n   * The subscription guid that makes the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purchasingSubscriptionGuid?: string;\n  /**\n   * The subscription name that makes the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purchasingSubscriptionName?: string;\n  /**\n   * This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly armSkuName?: string;\n  /**\n   * This is the term of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly term?: string;\n  /**\n   * The region of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly region?: string;\n  /**\n   * The name of the account that makes the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountName?: string;\n  /**\n   * The email of the account owner that makes the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountOwnerEmail?: string;\n  /**\n   * The department name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly departmentName?: string;\n  /**\n   * The cost center of this department if it is a department and a cost center is provided.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costCenter?: string;\n  /**\n   * The current enrollment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentEnrollment?: string;\n  /**\n   * The billing frequency, which can be either one-time or recurring.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingFrequency?: string;\n  /**\n   * The billing month(yyyyMMdd), on which the event initiated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingMonth?: number;\n  /**\n   * The monetary commitment amount at the enrollment scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly monetaryCommitment?: number;\n  /**\n   * The overage amount at the enrollment scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly overage?: number;\n}\n\n/** Modern Reservation transaction resource. */\nexport interface ModernReservationTransaction\n  extends ReservationTransactionResource {\n  /**\n   * The charge of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amount?: number;\n  /**\n   * This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly armSkuName?: string;\n  /**\n   * The billing frequency, which can be either one-time or recurring.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingFrequency?: string;\n  /**\n   * Billing profile Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileId?: string;\n  /**\n   * Billing profile name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileName?: string;\n  /**\n   * The ISO currency in which the transaction is charged, for example, USD.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n  /**\n   * The description of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The date of the transaction\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eventDate?: Date;\n  /**\n   * The type of the transaction (Purchase, Cancel, etc.)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eventType?: string;\n  /**\n   * Invoice Number\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoice?: string;\n  /**\n   * Invoice Id as on the invoice where the specific transaction appears.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceId?: string;\n  /**\n   * Invoice Section Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceSectionId?: string;\n  /**\n   * Invoice Section Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceSectionName?: string;\n  /**\n   * The subscription guid that makes the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purchasingSubscriptionGuid?: string;\n  /**\n   * The subscription name that makes the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purchasingSubscriptionName?: string;\n  /**\n   * The quantity of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quantity?: number;\n  /**\n   * The region of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly region?: string;\n  /**\n   * The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationOrderId?: string;\n  /**\n   * The name of the reservation order.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationOrderName?: string;\n  /**\n   * This is the term of the transaction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly term?: string;\n}\n\n/** The amount with exchange rate. */\nexport interface AmountWithExchangeRate extends Amount {\n  /**\n   * The exchange rate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exchangeRate?: number;\n  /**\n   * The exchange rate month.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exchangeRateMonth?: number;\n}\n\n/** The properties of the legacy reservation recommendation for single scope. */\nexport interface LegacySingleScopeReservationRecommendationProperties\n  extends LegacyReservationRecommendationProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scope: \"Single\";\n  /**\n   * Subscription id associated with single scoped recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n}\n\n/** The properties of the legacy reservation recommendation for shared scope. */\nexport interface LegacySharedScopeReservationRecommendationProperties\n  extends LegacyReservationRecommendationProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scope: \"Shared\";\n}\n\n/** Legacy usage detail. */\nexport interface LegacyUsageDetail extends UsageDetail {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"legacy\";\n  /**\n   * Billing Account identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingAccountId?: string;\n  /**\n   * Billing Account Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingAccountName?: string;\n  /**\n   * The billing period start date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodStartDate?: Date;\n  /**\n   * The billing period end date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodEndDate?: Date;\n  /**\n   * Billing Profile identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileId?: string;\n  /**\n   * Billing Profile Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileName?: string;\n  /**\n   * Account Owner Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountOwnerId?: string;\n  /**\n   * Account Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountName?: string;\n  /**\n   * Subscription guid.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n  /**\n   * Subscription name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionName?: string;\n  /**\n   * Date for the usage record.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly date?: Date;\n  /**\n   * Product name for the consumed service or purchase. Not available for Marketplace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly product?: string;\n  /**\n   * Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partNumber?: string;\n  /**\n   * The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * The details about the meter. By default this is not populated, unless it's specified in $expand.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterDetails?: MeterDetailsResponse;\n  /**\n   * The usage quantity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quantity?: number;\n  /**\n   * Effective Price that's charged for the usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly effectivePrice?: number;\n  /**\n   * The amount of cost before tax.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cost?: number;\n  /**\n   * Unit Price is the price applicable to you. (your EA or other contract price).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitPrice?: number;\n  /**\n   * Billing Currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingCurrency?: string;\n  /**\n   * Resource Location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceLocation?: string;\n  /**\n   * Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly consumedService?: string;\n  /**\n   * Unique identifier of the Azure Resource Manager usage detail resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceId?: string;\n  /**\n   * Resource Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceName?: string;\n  /**\n   * Service-specific metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceInfo1?: string;\n  /**\n   * Legacy field with optional service-specific metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceInfo2?: string;\n  /**\n   * Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: string;\n  /**\n   * Invoice Section Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceSection?: string;\n  /**\n   * The cost center of this department if it is a department and a cost center is provided.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costCenter?: string;\n  /**\n   * Resource Group Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGroup?: string;\n  /**\n   * ARM resource id of the reservation. Only applies to records relevant to reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationId?: string;\n  /**\n   * User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationName?: string;\n  /**\n   * Product Order Id. For reservations this is the Reservation Order ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly productOrderId?: string;\n  /**\n   * Product Order Name. For reservations this is the SKU that was purchased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly productOrderName?: string;\n  /**\n   * Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly offerId?: string;\n  /**\n   * Is Azure Credit Eligible.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isAzureCreditEligible?: boolean;\n  /**\n   * Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly term?: string;\n  /**\n   * Publisher Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publisherName?: string;\n  /**\n   * Publisher Type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publisherType?: string;\n  /**\n   * Plan Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly planName?: string;\n  /**\n   * Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly chargeType?: string;\n  /**\n   * Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly frequency?: string;\n  /**\n   * Retail price for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly payGPrice?: number;\n  /**\n   * Identifier that indicates how the meter is priced.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pricingModel?: PricingModelType;\n}\n\n/** Modern usage detail. */\nexport interface ModernUsageDetail extends UsageDetail {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"modern\";\n  /**\n   * Billing Account identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingAccountId?: string;\n  /**\n   * Effective Price that's charged for the usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly effectivePrice?: number;\n  /**\n   * Identifier that indicates how the meter is priced\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pricingModel?: PricingModelType;\n  /**\n   * Name of the Billing Account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingAccountName?: string;\n  /**\n   * Billing Period Start Date as in the invoice.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodStartDate?: Date;\n  /**\n   * Billing Period End Date as in the invoice.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodEndDate?: Date;\n  /**\n   * Identifier for the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileId?: string;\n  /**\n   * Name of the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileName?: string;\n  /**\n   * Unique Microsoft generated identifier for the Azure Subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionGuid?: string;\n  /**\n   * Name of the Azure Subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionName?: string;\n  /**\n   * Date for the usage record.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly date?: Date;\n  /**\n   * Name of the product that has accrued charges by consumption or purchase as listed in the invoice. Not available for Marketplace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly product?: string;\n  /**\n   * The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * Identifies the name of the meter against which consumption is measured.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterName?: string;\n  /**\n   * Identifies the location of the datacenter for certain services that are priced based on datacenter location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterRegion?: string;\n  /**\n   * Identifies the top-level service for the usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterCategory?: string;\n  /**\n   * Defines the type or sub-category of Azure service that can affect the rate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterSubCategory?: string;\n  /**\n   * List the service family for the product purchased or charged (Example: Storage ; Compute).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceFamily?: string;\n  /**\n   * Measure the quantity purchased or consumed.The amount of the meter used during the billing period.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quantity?: number;\n  /**\n   * Identifies the Unit that the service is charged in. For example, GB, hours, 10,000 s.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitOfMeasure?: string;\n  /**\n   * Instance Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceName?: string;\n  /**\n   * Estimated extendedCost or blended cost before tax in USD.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costInUSD?: number;\n  /**\n   * Unit Price is the price applicable to you. (your EA or other contract price).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unitPrice?: number;\n  /**\n   * The currency defining the billed cost.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingCurrencyCode?: string;\n  /**\n   * Name of the resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceLocation?: string;\n  /**\n   * Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly consumedService?: string;\n  /**\n   * Service-specific metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceInfo1?: string;\n  /**\n   * Legacy field with optional service-specific metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceInfo2?: string;\n  /**\n   * Additional details of this usage item. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: string;\n  /**\n   * Identifier of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceSectionId?: string;\n  /**\n   * Name of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceSectionName?: string;\n  /**\n   * The cost center of this department if it is a department and a cost center is provided.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costCenter?: string;\n  /**\n   * Name of the Azure resource group used for cohesive lifecycle management of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGroup?: string;\n  /**\n   * ARM resource id of the reservation. Only applies to records relevant to reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationId?: string;\n  /**\n   * User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationName?: string;\n  /**\n   * The identifier for the asset or Azure plan name that the subscription belongs to. For example: Azure Plan. For reservations this is the Reservation Order ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly productOrderId?: string;\n  /**\n   * Product Order Name. For reservations this is the SKU that was purchased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly productOrderName?: string;\n  /**\n   * Determines if the cost is eligible to be paid for using Azure credits.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isAzureCreditEligible?: boolean;\n  /**\n   * Term (in months). Displays the term for the validity of the offer. For example. In case of reserved instances it displays 12 months for yearly term of reserved instance. For one time purchases or recurring purchases, the terms displays 1 month; This is not applicable for Azure consumption.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly term?: string;\n  /**\n   * Name of the publisher of the service including Microsoft or Third Party publishers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publisherName?: string;\n  /**\n   * Type of publisher that identifies if the publisher is first party, third party reseller or third party agency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publisherType?: string;\n  /**\n   * Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly chargeType?: string;\n  /**\n   * Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly frequency?: string;\n  /**\n   * ExtendedCost or blended cost before tax in billed currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costInBillingCurrency?: number;\n  /**\n   * ExtendedCost or blended cost before tax in pricing currency to correlate with prices.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costInPricingCurrency?: number;\n  /**\n   * Exchange rate used in conversion from pricing currency to billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exchangeRate?: string;\n  /**\n   * Date on which exchange rate used in conversion from pricing currency to billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exchangeRateDate?: Date;\n  /**\n   * Invoice ID as on the invoice where the specific transaction appears.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceId?: string;\n  /**\n   * Reference to an original invoice there is a refund (negative cost). This is populated only when there is a refund.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousInvoiceId?: string;\n  /**\n   * Pricing Billing Currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pricingCurrencyCode?: string;\n  /**\n   * Identifier for the product that has accrued charges by consumption or purchase . This is the concatenated key of productId and SkuId in partner center.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly productIdentifier?: string;\n  /**\n   * Resource Location Normalized.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceLocationNormalized?: string;\n  /**\n   * Start date for the rating period when the service usage was rated for charges. The prices for Azure services are determined for the rating period.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly servicePeriodStartDate?: Date;\n  /**\n   * End date for the period when the service usage was rated for charges. The prices for Azure services are determined based on the rating period.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly servicePeriodEndDate?: Date;\n  /**\n   * Identifier of the customer's AAD tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customerTenantId?: string;\n  /**\n   * Name of the customer's AAD tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customerName?: string;\n  /**\n   * Identifier for the partner's AAD tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerTenantId?: string;\n  /**\n   * Name of the partner' AAD tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerName?: string;\n  /**\n   * MPNId for the reseller associated with the subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resellerMpnId?: string;\n  /**\n   * Reseller Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resellerName?: string;\n  /**\n   * Publisher Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publisherId?: string;\n  /**\n   * Market Price that's charged for the usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly marketPrice?: number;\n  /**\n   * Exchange Rate from pricing currency to billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exchangeRatePricingToBilling?: number;\n  /**\n   * The amount of PayG cost before tax in billing currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly paygCostInBillingCurrency?: number;\n  /**\n   * The amount of PayG cost before tax in US Dollar currency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly paygCostInUSD?: number;\n  /**\n   * Rate of discount applied if there is a partner earned credit (PEC) based on partner admin link access.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerEarnedCreditRate?: number;\n  /**\n   * Flag to indicate if partner earned credit has been applied or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerEarnedCreditApplied?: string;\n  /**\n   * Retail price for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly payGPrice?: number;\n  /**\n   * Unique identifier for the applicable benefit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitId?: string;\n  /**\n   * Name of the applicable benefit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly benefitName?: string;\n  /**\n   * Identifier for Product Category or Line Of Business, Ex - Azure, Microsoft 365, AWS e.t.c\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * Name for Cost Allocation Rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costAllocationRuleName?: string;\n}\n\n/** Legacy reservation recommendation. */\nexport interface LegacyReservationRecommendation\n  extends ReservationRecommendation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"legacy\";\n  /**\n   * The number of days of usage to look back for recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lookBackPeriod?: string;\n  /**\n   * The instance Flexibility Ratio.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityRatio?: number;\n  /**\n   * The instance Flexibility Group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityGroup?: string;\n  /**\n   * The normalized Size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly normalizedSize?: string;\n  /**\n   * The recommended Quantity Normalized.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedQuantityNormalized?: number;\n  /**\n   * The meter id (GUID)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * The azure resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * RI recommendations in one or three year terms.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly term?: string;\n  /**\n   * The total amount of cost without reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costWithNoReservedInstances?: number;\n  /**\n   * Recommended quality for reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedQuantity?: number;\n  /**\n   * The total amount of cost with reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalCostWithReservedInstances?: number;\n  /**\n   * Total estimated savings with reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly netSavings?: number;\n  /**\n   * The usage date for looking back.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firstUsageDate?: Date;\n  /** Shared or single recommendation. */\n  scope: string;\n  /**\n   * List of sku properties\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuProperties?: SkuProperty[];\n}\n\n/** Modern reservation recommendation. */\nexport interface ModernReservationRecommendation\n  extends ReservationRecommendation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"modern\";\n  /**\n   * Resource Location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locationPropertiesLocation?: string;\n  /**\n   * The number of days of usage to look back for recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lookBackPeriod?: number;\n  /**\n   * The instance Flexibility Ratio.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityRatio?: number;\n  /**\n   * The instance Flexibility Group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceFlexibilityGroup?: string;\n  /**\n   * The normalized Size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly normalizedSize?: string;\n  /**\n   * The recommended Quantity Normalized.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedQuantityNormalized?: number;\n  /**\n   * The meter id (GUID)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * RI recommendations in one or three year terms.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly term?: string;\n  /**\n   * The total amount of cost without reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costWithNoReservedInstances?: Amount;\n  /**\n   * Recommended quality for reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedQuantity?: number;\n  /**\n   * The total amount of cost with reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalCostWithReservedInstances?: Amount;\n  /**\n   * Total estimated savings with reserved instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly netSavings?: Amount;\n  /**\n   * The usage date for looking back.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firstUsageDate?: Date;\n  /**\n   * Shared or single recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scope?: string;\n  /**\n   * List of sku properties\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuProperties?: SkuProperty[];\n  /**\n   * This is the ARM Sku name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuName?: string;\n}\n\n/** Legacy charge summary. */\nexport interface LegacyChargeSummary extends ChargeSummary {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"legacy\";\n  /**\n   * The id of the billing period resource that the charge belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodId?: string;\n  /**\n   * Usage start date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageStart?: string;\n  /**\n   * Usage end date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageEnd?: string;\n  /**\n   * Azure Charges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureCharges?: number;\n  /**\n   * Charges Billed separately.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly chargesBilledSeparately?: number;\n  /**\n   * Marketplace Charges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly marketplaceCharges?: number;\n  /**\n   * Currency Code\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currency?: string;\n}\n\n/** Modern charge summary. */\nexport interface ModernChargeSummary extends ChargeSummary {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"modern\";\n  /**\n   * The id of the billing period resource that the charge belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingPeriodId?: string;\n  /**\n   * Usage start date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageStart?: string;\n  /**\n   * Usage end date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usageEnd?: string;\n  /**\n   * Azure Charges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureCharges?: Amount;\n  /**\n   * Charges Billed separately.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly chargesBilledSeparately?: Amount;\n  /**\n   * Marketplace Charges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly marketplaceCharges?: Amount;\n  /**\n   * Billing Account Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingAccountId?: string;\n  /**\n   * Billing Profile Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingProfileId?: string;\n  /**\n   * Invoice Section Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invoiceSectionId?: string;\n  /**\n   * Customer Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customerId?: string;\n  /**\n   * Is charge Invoiced\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isInvoiced?: boolean;\n}\n\n/** Legacy Reservation transaction resource. */\nexport interface LegacyReservationTransaction extends ReservationTransaction {}\n\n/** Known values of {@link Metrictype} that the service accepts. */\nexport enum KnownMetrictype {\n  /** Actual cost data. */\n  ActualCostMetricType = \"actualcost\",\n  /** Amortized cost data. */\n  AmortizedCostMetricType = \"amortizedcost\",\n  /** Usage data. */\n  UsageMetricType = \"usage\"\n}\n\n/**\n * Defines values for Metrictype. \\\n * {@link KnownMetrictype} can be used interchangeably with Metrictype,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **actualcost**: Actual cost data. \\\n * **amortizedcost**: Amortized cost data. \\\n * **usage**: Usage data.\n */\nexport type Metrictype = string;\n\n/** Known values of {@link UsageDetailsKind} that the service accepts. */\nexport enum KnownUsageDetailsKind {\n  /** Legacy */\n  Legacy = \"legacy\",\n  /** Modern */\n  Modern = \"modern\"\n}\n\n/**\n * Defines values for UsageDetailsKind. \\\n * {@link KnownUsageDetailsKind} can be used interchangeably with UsageDetailsKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **legacy** \\\n * **modern**\n */\nexport type UsageDetailsKind = string;\n\n/** Known values of {@link CategoryType} that the service accepts. */\nexport enum KnownCategoryType {\n  /** Cost */\n  Cost = \"Cost\"\n}\n\n/**\n * Defines values for CategoryType. \\\n * {@link KnownCategoryType} can be used interchangeably with CategoryType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Cost**\n */\nexport type CategoryType = string;\n\n/** Known values of {@link TimeGrainType} that the service accepts. */\nexport enum KnownTimeGrainType {\n  /** Monthly */\n  Monthly = \"Monthly\",\n  /** Quarterly */\n  Quarterly = \"Quarterly\",\n  /** Annually */\n  Annually = \"Annually\",\n  /** BillingMonth */\n  BillingMonth = \"BillingMonth\",\n  /** BillingQuarter */\n  BillingQuarter = \"BillingQuarter\",\n  /** BillingAnnual */\n  BillingAnnual = \"BillingAnnual\"\n}\n\n/**\n * Defines values for TimeGrainType. \\\n * {@link KnownTimeGrainType} can be used interchangeably with TimeGrainType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Monthly** \\\n * **Quarterly** \\\n * **Annually** \\\n * **BillingMonth** \\\n * **BillingQuarter** \\\n * **BillingAnnual**\n */\nexport type TimeGrainType = string;\n\n/** Known values of {@link BudgetOperatorType} that the service accepts. */\nexport enum KnownBudgetOperatorType {\n  /** In */\n  In = \"In\"\n}\n\n/**\n * Defines values for BudgetOperatorType. \\\n * {@link KnownBudgetOperatorType} can be used interchangeably with BudgetOperatorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **In**\n */\nexport type BudgetOperatorType = string;\n\n/** Known values of {@link OperatorType} that the service accepts. */\nexport enum KnownOperatorType {\n  /** EqualTo */\n  EqualTo = \"EqualTo\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** GreaterThanOrEqualTo */\n  GreaterThanOrEqualTo = \"GreaterThanOrEqualTo\"\n}\n\n/**\n * Defines values for OperatorType. \\\n * {@link KnownOperatorType} can be used interchangeably with OperatorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EqualTo** \\\n * **GreaterThan** \\\n * **GreaterThanOrEqualTo**\n */\nexport type OperatorType = string;\n\n/** Known values of {@link ThresholdType} that the service accepts. */\nexport enum KnownThresholdType {\n  /** Actual */\n  Actual = \"Actual\",\n  /** Forecasted */\n  Forecasted = \"Forecasted\"\n}\n\n/**\n * Defines values for ThresholdType. \\\n * {@link KnownThresholdType} can be used interchangeably with ThresholdType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Actual** \\\n * **Forecasted**\n */\nexport type ThresholdType = string;\n\n/** Known values of {@link CultureCode} that the service accepts. */\nexport enum KnownCultureCode {\n  /** EnUs */\n  EnUs = \"en-us\",\n  /** JaJp */\n  JaJp = \"ja-jp\",\n  /** ZhCn */\n  ZhCn = \"zh-cn\",\n  /** DeDe */\n  DeDe = \"de-de\",\n  /** EsEs */\n  EsEs = \"es-es\",\n  /** FrFr */\n  FrFr = \"fr-fr\",\n  /** ItIt */\n  ItIt = \"it-it\",\n  /** KoKr */\n  KoKr = \"ko-kr\",\n  /** PtBr */\n  PtBr = \"pt-br\",\n  /** RuRu */\n  RuRu = \"ru-ru\",\n  /** ZhTw */\n  ZhTw = \"zh-tw\",\n  /** CsCz */\n  CsCz = \"cs-cz\",\n  /** PlPl */\n  PlPl = \"pl-pl\",\n  /** TrTr */\n  TrTr = \"tr-tr\",\n  /** DaDk */\n  DaDk = \"da-dk\",\n  /** EnGb */\n  EnGb = \"en-gb\",\n  /** HuHu */\n  HuHu = \"hu-hu\",\n  /** NbNo */\n  NbNo = \"nb-no\",\n  /** NlNl */\n  NlNl = \"nl-nl\",\n  /** PtPt */\n  PtPt = \"pt-pt\",\n  /** SvSe */\n  SvSe = \"sv-se\"\n}\n\n/**\n * Defines values for CultureCode. \\\n * {@link KnownCultureCode} can be used interchangeably with CultureCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **en-us** \\\n * **ja-jp** \\\n * **zh-cn** \\\n * **de-de** \\\n * **es-es** \\\n * **fr-fr** \\\n * **it-it** \\\n * **ko-kr** \\\n * **pt-br** \\\n * **ru-ru** \\\n * **zh-tw** \\\n * **cs-cz** \\\n * **pl-pl** \\\n * **tr-tr** \\\n * **da-dk** \\\n * **en-gb** \\\n * **hu-hu** \\\n * **nb-no** \\\n * **nl-nl** \\\n * **pt-pt** \\\n * **sv-se**\n */\nexport type CultureCode = string;\n\n/** Known values of {@link ChargeSummaryKind} that the service accepts. */\nexport enum KnownChargeSummaryKind {\n  /** Legacy */\n  Legacy = \"legacy\",\n  /** Modern */\n  Modern = \"modern\"\n}\n\n/**\n * Defines values for ChargeSummaryKind. \\\n * {@link KnownChargeSummaryKind} can be used interchangeably with ChargeSummaryKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **legacy** \\\n * **modern**\n */\nexport type ChargeSummaryKind = string;\n\n/** Known values of {@link BillingFrequency} that the service accepts. */\nexport enum KnownBillingFrequency {\n  /** Month */\n  Month = \"Month\",\n  /** Quarter */\n  Quarter = \"Quarter\",\n  /** Year */\n  Year = \"Year\"\n}\n\n/**\n * Defines values for BillingFrequency. \\\n * {@link KnownBillingFrequency} can be used interchangeably with BillingFrequency,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Month** \\\n * **Quarter** \\\n * **Year**\n */\nexport type BillingFrequency = string;\n\n/** Known values of {@link Datagrain} that the service accepts. */\nexport enum KnownDatagrain {\n  /** Daily grain of data */\n  DailyGrain = \"daily\",\n  /** Monthly grain of data */\n  MonthlyGrain = \"monthly\"\n}\n\n/**\n * Defines values for Datagrain. \\\n * {@link KnownDatagrain} can be used interchangeably with Datagrain,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **daily**: Daily grain of data \\\n * **monthly**: Monthly grain of data\n */\nexport type Datagrain = string;\n\n/** Known values of {@link ReservationRecommendationKind} that the service accepts. */\nexport enum KnownReservationRecommendationKind {\n  /** Legacy */\n  Legacy = \"legacy\",\n  /** Modern */\n  Modern = \"modern\"\n}\n\n/**\n * Defines values for ReservationRecommendationKind. \\\n * {@link KnownReservationRecommendationKind} can be used interchangeably with ReservationRecommendationKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **legacy** \\\n * **modern**\n */\nexport type ReservationRecommendationKind = string;\n\n/** Known values of {@link Term} that the service accepts. */\nexport enum KnownTerm {\n  /** 1 year reservation term */\n  P1Y = \"P1Y\",\n  /** 3 year reservation term */\n  P3Y = \"P3Y\"\n}\n\n/**\n * Defines values for Term. \\\n * {@link KnownTerm} can be used interchangeably with Term,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **P1Y**: 1 year reservation term \\\n * **P3Y**: 3 year reservation term\n */\nexport type Term = string;\n\n/** Known values of {@link LookBackPeriod} that the service accepts. */\nexport enum KnownLookBackPeriod {\n  /** Use 7 days of data for recommendations */\n  Last07Days = \"Last7Days\",\n  /** Use 30 days of data for recommendations */\n  Last30Days = \"Last30Days\",\n  /** Use 60 days of data for recommendations */\n  Last60Days = \"Last60Days\"\n}\n\n/**\n * Defines values for LookBackPeriod. \\\n * {@link KnownLookBackPeriod} can be used interchangeably with LookBackPeriod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Last7Days**: Use 7 days of data for recommendations \\\n * **Last30Days**: Use 30 days of data for recommendations \\\n * **Last60Days**: Use 60 days of data for recommendations\n */\nexport type LookBackPeriod = string;\n\n/** Known values of {@link EventType} that the service accepts. */\nexport enum KnownEventType {\n  /** SettledCharges */\n  SettledCharges = \"SettledCharges\",\n  /** PendingCharges */\n  PendingCharges = \"PendingCharges\",\n  /** PendingAdjustments */\n  PendingAdjustments = \"PendingAdjustments\",\n  /** PendingNewCredit */\n  PendingNewCredit = \"PendingNewCredit\",\n  /** PendingExpiredCredit */\n  PendingExpiredCredit = \"PendingExpiredCredit\",\n  /** UnKnown */\n  UnKnown = \"UnKnown\",\n  /** NewCredit */\n  NewCredit = \"NewCredit\"\n}\n\n/**\n * Defines values for EventType. \\\n * {@link KnownEventType} can be used interchangeably with EventType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SettledCharges** \\\n * **PendingCharges** \\\n * **PendingAdjustments** \\\n * **PendingNewCredit** \\\n * **PendingExpiredCredit** \\\n * **UnKnown** \\\n * **NewCredit**\n */\nexport type EventType = string;\n\n/** Known values of {@link LotSource} that the service accepts. */\nexport enum KnownLotSource {\n  /** PurchasedCredit */\n  PurchasedCredit = \"PurchasedCredit\",\n  /** PromotionalCredit */\n  PromotionalCredit = \"PromotionalCredit\",\n  /** ConsumptionCommitment */\n  ConsumptionCommitment = \"ConsumptionCommitment\"\n}\n\n/**\n * Defines values for LotSource. \\\n * {@link KnownLotSource} can be used interchangeably with LotSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PurchasedCredit** \\\n * **PromotionalCredit** \\\n * **ConsumptionCommitment**\n */\nexport type LotSource = string;\n\n/** Known values of {@link Status} that the service accepts. */\nexport enum KnownStatus {\n  /** None */\n  None = \"None\",\n  /** Active */\n  Active = \"Active\",\n  /** Inactive */\n  Inactive = \"Inactive\",\n  /** Expired */\n  Expired = \"Expired\",\n  /** Complete */\n  Complete = \"Complete\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for Status. \\\n * {@link KnownStatus} can be used interchangeably with Status,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Active** \\\n * **Inactive** \\\n * **Expired** \\\n * **Complete** \\\n * **Canceled**\n */\nexport type Status = string;\n\n/** Known values of {@link PricingModelType} that the service accepts. */\nexport enum KnownPricingModelType {\n  /** OnDemand */\n  OnDemand = \"On Demand\",\n  /** Reservation */\n  Reservation = \"Reservation\",\n  /** Spot */\n  Spot = \"Spot\"\n}\n\n/**\n * Defines values for PricingModelType. \\\n * {@link KnownPricingModelType} can be used interchangeably with PricingModelType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **On Demand** \\\n * **Reservation** \\\n * **Spot**\n */\nexport type PricingModelType = string;\n\n/** Known values of {@link Scope} that the service accepts. */\nexport enum KnownScope {\n  /** Single */\n  Single = \"Single\",\n  /** Shared */\n  Shared = \"Shared\"\n}\n\n/**\n * Defines values for Scope. \\\n * {@link KnownScope} can be used interchangeably with Scope,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Single** \\\n * **Shared**\n */\nexport type Scope = string;\n\n/** Optional parameters. */\nexport interface UsageDetailsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to expand the properties/additionalInfo or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details. */\n  expand?: string;\n  /** May be used to filter usageDetails by properties/resourceGroup, properties/resourceName, properties/resourceId, properties/chargeType, properties/reservationId, properties/publisherType or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). PublisherType Filter accepts two values azure and marketplace and it is currently supported for Web Direct Offer Type */\n  filter?: string;\n  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */\n  skiptoken?: string;\n  /** May be used to limit the number of results to the most recent N usageDetails. */\n  top?: number;\n  /** Allows to select different type of cost/usage records. */\n  metric?: Metrictype;\n}\n\n/** Contains response data for the list operation. */\nexport type UsageDetailsListResponse = UsageDetailsListResult;\n\n/** Optional parameters. */\nexport interface UsageDetailsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type UsageDetailsListNextResponse = UsageDetailsListResult;\n\n/** Optional parameters. */\nexport interface MarketplacesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. */\n  filter?: string;\n  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */\n  skiptoken?: string;\n  /** May be used to limit the number of results to the most recent N marketplaces. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type MarketplacesListResponse = MarketplacesListResult;\n\n/** Optional parameters. */\nexport interface MarketplacesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type MarketplacesListNextResponse = MarketplacesListResult;\n\n/** Optional parameters. */\nexport interface BudgetsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BudgetsListResponse = BudgetsListResult;\n\n/** Optional parameters. */\nexport interface BudgetsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BudgetsGetResponse = Budget;\n\n/** Optional parameters. */\nexport interface BudgetsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BudgetsCreateOrUpdateResponse = Budget;\n\n/** Optional parameters. */\nexport interface BudgetsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface BudgetsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BudgetsListNextResponse = BudgetsListResult;\n\n/** Optional parameters. */\nexport interface TagsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TagsGetResponse = TagsResult;\n\n/** Optional parameters. */\nexport interface ChargesListOptionalParams extends coreClient.OperationOptions {\n  /** May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). */\n  filter?: string;\n  /** Start date */\n  startDate?: string;\n  /** End date */\n  endDate?: string;\n  /** May be used to group charges for billingAccount scope by properties/billingProfileId, properties/invoiceSectionId, properties/customerId (specific for Partner Led), or for billingProfile scope by properties/invoiceSectionId. */\n  apply?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ChargesListResponse = ChargesListResult;\n\n/** Optional parameters. */\nexport interface BalancesGetByBillingAccountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByBillingAccount operation. */\nexport type BalancesGetByBillingAccountResponse = Balance;\n\n/** Optional parameters. */\nexport interface BalancesGetForBillingPeriodByBillingAccountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getForBillingPeriodByBillingAccount operation. */\nexport type BalancesGetForBillingPeriodByBillingAccountResponse = Balance;\n\n/** Optional parameters. */\nexport interface ReservationsSummariesListByReservationOrderOptionalParams\n  extends coreClient.OperationOptions {\n  /** Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' */\n  filter?: string;\n}\n\n/** Contains response data for the listByReservationOrder operation. */\nexport type ReservationsSummariesListByReservationOrderResponse = ReservationSummariesListResult;\n\n/** Optional parameters. */\nexport interface ReservationsSummariesListByReservationOrderAndReservationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' */\n  filter?: string;\n}\n\n/** Contains response data for the listByReservationOrderAndReservation operation. */\nexport type ReservationsSummariesListByReservationOrderAndReservationResponse = ReservationSummariesListResult;\n\n/** Optional parameters. */\nexport interface ReservationsSummariesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'. Not applicable when querying with billing profile */\n  filter?: string;\n  /** Start date. Only applicable when querying with billing profile */\n  startDate?: string;\n  /** End date. Only applicable when querying with billing profile */\n  endDate?: string;\n  /** Reservation Id GUID. Only valid if reservationOrderId is also provided. Filter to a specific reservation */\n  reservationId?: string;\n  /** Reservation Order Id GUID. Required if reservationId is provided. Filter to a specific reservation order */\n  reservationOrderId?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ReservationsSummariesListResponse = ReservationSummariesListResult;\n\n/** Optional parameters. */\nexport interface ReservationsSummariesListByReservationOrderNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByReservationOrderNext operation. */\nexport type ReservationsSummariesListByReservationOrderNextResponse = ReservationSummariesListResult;\n\n/** Optional parameters. */\nexport interface ReservationsSummariesListByReservationOrderAndReservationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByReservationOrderAndReservationNext operation. */\nexport type ReservationsSummariesListByReservationOrderAndReservationNextResponse = ReservationSummariesListResult;\n\n/** Optional parameters. */\nexport interface ReservationsSummariesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReservationsSummariesListNextResponse = ReservationSummariesListResult;\n\n/** Optional parameters. */\nexport interface ReservationsDetailsListByReservationOrderOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByReservationOrder operation. */\nexport type ReservationsDetailsListByReservationOrderResponse = ReservationDetailsListResult;\n\n/** Optional parameters. */\nexport interface ReservationsDetailsListByReservationOrderAndReservationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByReservationOrderAndReservation operation. */\nexport type ReservationsDetailsListByReservationOrderAndReservationResponse = ReservationDetailsListResult;\n\n/** Optional parameters. */\nexport interface ReservationsDetailsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'. Not applicable when querying with billing profile */\n  filter?: string;\n  /** Start date. Only applicable when querying with billing profile */\n  startDate?: string;\n  /** End date. Only applicable when querying with billing profile */\n  endDate?: string;\n  /** Reservation Id GUID. Only valid if reservationOrderId is also provided. Filter to a specific reservation */\n  reservationId?: string;\n  /** Reservation Order Id GUID. Required if reservationId is provided. Filter to a specific reservation order */\n  reservationOrderId?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ReservationsDetailsListResponse = ReservationDetailsListResult;\n\n/** Optional parameters. */\nexport interface ReservationsDetailsListByReservationOrderNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByReservationOrderNext operation. */\nexport type ReservationsDetailsListByReservationOrderNextResponse = ReservationDetailsListResult;\n\n/** Optional parameters. */\nexport interface ReservationsDetailsListByReservationOrderAndReservationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByReservationOrderAndReservationNext operation. */\nexport type ReservationsDetailsListByReservationOrderAndReservationNextResponse = ReservationDetailsListResult;\n\n/** Optional parameters. */\nexport interface ReservationsDetailsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReservationsDetailsListNextResponse = ReservationDetailsListResult;\n\n/** Optional parameters. */\nexport interface ReservationRecommendationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter reservationRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Single'; properties/resourceType with allowed values ['VirtualMachines', 'SQLDatabases', 'PostgreSQL', 'ManagedDisk', 'MySQL', 'RedHat', 'MariaDB', 'RedisCache', 'CosmosDB', 'SqlDataWarehouse', 'SUSELinux', 'AppService', 'BlockBlob', 'AzureDataExplorer', 'VMwareCloudSimple'] and default value 'VirtualMachines'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last7Days'. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ReservationRecommendationsListResponse = ReservationRecommendationsListResult;\n\n/** Optional parameters. */\nexport interface ReservationRecommendationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReservationRecommendationsListNextResponse = ReservationRecommendationsListResult;\n\n/** Optional parameters. */\nexport interface ReservationRecommendationDetailsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ReservationRecommendationDetailsGetResponse = ReservationRecommendationDetailsModel;\n\n/** Optional parameters. */\nexport interface ReservationTransactionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge' */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ReservationTransactionsListResponse = ReservationTransactionsListResult;\n\n/** Optional parameters. */\nexport interface ReservationTransactionsListByBillingProfileOptionalParams\n  extends coreClient.OperationOptions {\n  /** Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge' */\n  filter?: string;\n}\n\n/** Contains response data for the listByBillingProfile operation. */\nexport type ReservationTransactionsListByBillingProfileResponse = ModernReservationTransactionsListResult;\n\n/** Optional parameters. */\nexport interface ReservationTransactionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReservationTransactionsListNextResponse = ReservationTransactionsListResult;\n\n/** Optional parameters. */\nexport interface ReservationTransactionsListByBillingProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingProfileNext operation. */\nexport type ReservationTransactionsListByBillingProfileNextResponse = ModernReservationTransactionsListResult;\n\n/** Optional parameters. */\nexport interface PriceSheetGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet. */\n  expand?: string;\n  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */\n  skiptoken?: string;\n  /** May be used to limit the number of results to the top N results. */\n  top?: number;\n}\n\n/** Contains response data for the get operation. */\nexport type PriceSheetGetResponse = PriceSheetResult;\n\n/** Optional parameters. */\nexport interface PriceSheetGetByBillingPeriodOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet. */\n  expand?: string;\n  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */\n  skiptoken?: string;\n  /** May be used to limit the number of results to the top N results. */\n  top?: number;\n}\n\n/** Contains response data for the getByBillingPeriod operation. */\nexport type PriceSheetGetByBillingPeriodResponse = PriceSheetResult;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface AggregatedCostGetByManagementGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter aggregated cost by properties/usageStart (Utc time), properties/usageEnd (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). */\n  filter?: string;\n}\n\n/** Contains response data for the getByManagementGroup operation. */\nexport type AggregatedCostGetByManagementGroupResponse = ManagementGroupAggregatedCostResult;\n\n/** Optional parameters. */\nexport interface AggregatedCostGetForBillingPeriodByManagementGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getForBillingPeriodByManagementGroup operation. */\nexport type AggregatedCostGetForBillingPeriodByManagementGroupResponse = ManagementGroupAggregatedCostResult;\n\n/** Optional parameters. */\nexport interface EventsListByBillingProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingProfile operation. */\nexport type EventsListByBillingProfileResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListByBillingAccountOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter the events by lotId, lotSource etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). */\n  filter?: string;\n}\n\n/** Contains response data for the listByBillingAccount operation. */\nexport type EventsListByBillingAccountResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListByBillingProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingProfileNext operation. */\nexport type EventsListByBillingProfileNextResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListByBillingAccountNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingAccountNext operation. */\nexport type EventsListByBillingAccountNextResponse = Events;\n\n/** Optional parameters. */\nexport interface LotsListByBillingProfileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingProfile operation. */\nexport type LotsListByBillingProfileResponse = Lots;\n\n/** Optional parameters. */\nexport interface LotsListByBillingAccountOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter the lots by Status, Source etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). */\n  filter?: string;\n}\n\n/** Contains response data for the listByBillingAccount operation. */\nexport type LotsListByBillingAccountResponse = Lots;\n\n/** Optional parameters. */\nexport interface LotsListByBillingProfileNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingProfileNext operation. */\nexport type LotsListByBillingProfileNextResponse = Lots;\n\n/** Optional parameters. */\nexport interface LotsListByBillingAccountNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByBillingAccountNext operation. */\nexport type LotsListByBillingAccountNextResponse = Lots;\n\n/** Optional parameters. */\nexport interface CreditsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CreditsGetResponse = CreditSummary;\n\n/** Optional parameters. */\nexport interface ConsumptionManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const UsageDetailsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageDetailsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UsageDetail\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetails\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MarketplacesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MarketplacesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Marketplace\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BudgetsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BudgetsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Budget\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BudgetTimePeriod: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BudgetTimePeriod\",\n    modelProperties: {\n      startDate: {\n        serializedName: \"startDate\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDate: {\n        serializedName: \"endDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const BudgetFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BudgetFilter\",\n    modelProperties: {\n      and: {\n        serializedName: \"and\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BudgetFilterProperties\"\n            }\n          }\n        }\n      },\n      not: {\n        serializedName: \"not\",\n        type: {\n          name: \"Composite\",\n          className: \"BudgetFilterProperties\"\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Composite\",\n          className: \"BudgetComparisonExpression\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BudgetComparisonExpression\"\n        }\n      }\n    }\n  }\n};\n\nexport const BudgetFilterProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BudgetFilterProperties\",\n    modelProperties: {\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Composite\",\n          className: \"BudgetComparisonExpression\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BudgetComparisonExpression\"\n        }\n      }\n    }\n  }\n};\n\nexport const BudgetComparisonExpression: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BudgetComparisonExpression\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CurrentSpend: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CurrentSpend\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Notification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Notification\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      threshold: {\n        serializedName: \"threshold\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      contactEmails: {\n        constraints: {\n          MaxItems: 50\n        },\n        serializedName: \"contactEmails\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      contactRoles: {\n        serializedName: \"contactRoles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      contactGroups: {\n        constraints: {\n          MaxItems: 50\n        },\n        serializedName: \"contactGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      thresholdType: {\n        defaultValue: \"Actual\",\n        serializedName: \"thresholdType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locale: {\n        serializedName: \"locale\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastSpend: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastSpend\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"eTag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Tag: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tag\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ChargesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChargesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChargeSummary\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BalancePropertiesNewPurchasesDetailsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BalancePropertiesNewPurchasesDetailsItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BalancePropertiesAdjustmentDetailsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BalancePropertiesAdjustmentDetailsItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationSummariesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationSummariesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationSummary\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationDetailsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationDetailsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationDetail\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationRecommendationsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationRecommendationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationRecommendation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      previousLink: {\n        serializedName: \"previousLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceAttributes: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceAttributes\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationRecommendationDetailsResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationRecommendationDetailsResourceProperties\",\n    modelProperties: {\n      appliedScopes: {\n        serializedName: \"appliedScopes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      onDemandRate: {\n        serializedName: \"onDemandRate\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"region\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationRate: {\n        serializedName: \"reservationRate\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationRecommendationDetailsSavingsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationRecommendationDetailsSavingsProperties\",\n    modelProperties: {\n      calculatedSavings: {\n        serializedName: \"calculatedSavings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className:\n                \"ReservationRecommendationDetailsCalculatedSavingsProperties\"\n            }\n          }\n        }\n      },\n      lookBackPeriod: {\n        serializedName: \"lookBackPeriod\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      recommendedQuantity: {\n        serializedName: \"recommendedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      reservationOrderTerm: {\n        serializedName: \"reservationOrderTerm\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      savingsType: {\n        serializedName: \"savingsType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"unitOfMeasure\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationRecommendationDetailsCalculatedSavingsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationRecommendationDetailsCalculatedSavingsProperties\",\n    modelProperties: {\n      onDemandCost: {\n        serializedName: \"onDemandCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      overageCost: {\n        serializedName: \"overageCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      reservationCost: {\n        serializedName: \"reservationCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalReservationCost: {\n        serializedName: \"totalReservationCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      reservedUnitCount: {\n        serializedName: \"reservedUnitCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      savings: {\n        serializedName: \"savings\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationRecommendationDetailsUsageProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationRecommendationDetailsUsageProperties\",\n    modelProperties: {\n      firstConsumptionDate: {\n        serializedName: \"firstConsumptionDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastConsumptionDate: {\n        serializedName: \"lastConsumptionDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lookBackUnitType: {\n        serializedName: \"lookBackUnitType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageData: {\n        serializedName: \"usageData\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      usageGrain: {\n        serializedName: \"usageGrain\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HighCasedErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HighCasedErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"HighCasedErrorDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const HighCasedErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HighCasedErrorDetails\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationTransactionsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationTransactionsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationTransaction\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationTransactionResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationTransactionResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ModernReservationTransactionsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModernReservationTransactionsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ModernReservationTransaction\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PriceSheetProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PriceSheetProperties\",\n    modelProperties: {\n      billingPeriodId: {\n        serializedName: \"billingPeriodId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterId: {\n        serializedName: \"meterId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      meterDetails: {\n        serializedName: \"meterDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"MeterDetails\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"unitOfMeasure\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      includedQuantity: {\n        serializedName: \"includedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      partNumber: {\n        serializedName: \"partNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unitPrice: {\n        serializedName: \"unitPrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      currencyCode: {\n        serializedName: \"currencyCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      offerId: {\n        serializedName: \"offerId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MeterDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MeterDetails\",\n    modelProperties: {\n      meterName: {\n        serializedName: \"meterName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterCategory: {\n        serializedName: \"meterCategory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterSubCategory: {\n        serializedName: \"meterSubCategory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterLocation: {\n        serializedName: \"meterLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      totalIncludedQuantity: {\n        serializedName: \"totalIncludedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      pretaxStandardRate: {\n        serializedName: \"pretaxStandardRate\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      serviceName: {\n        serializedName: \"serviceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceTier: {\n        serializedName: \"serviceTier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Events: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Events\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EventSummary\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Amount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Amount\",\n    modelProperties: {\n      currency: {\n        serializedName: \"currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Reseller: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Reseller\",\n    modelProperties: {\n      resellerId: {\n        serializedName: \"resellerId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resellerDescription: {\n        serializedName: \"resellerDescription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Lots: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Lots\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LotSummary\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreditBalanceSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreditBalanceSummary\",\n    modelProperties: {\n      estimatedBalance: {\n        serializedName: \"estimatedBalance\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      currentBalance: {\n        serializedName: \"currentBalance\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      estimatedBalanceInBillingCurrency: {\n        serializedName: \"estimatedBalanceInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      }\n    }\n  }\n};\n\nexport const MeterDetailsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MeterDetailsResponse\",\n    modelProperties: {\n      meterName: {\n        serializedName: \"meterName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterCategory: {\n        serializedName: \"meterCategory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterSubCategory: {\n        serializedName: \"meterSubCategory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"unitOfMeasure\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceFamily: {\n        serializedName: \"serviceFamily\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegacyReservationRecommendationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LegacyReservationRecommendationProperties\",\n    uberParent: \"LegacyReservationRecommendationProperties\",\n    polymorphicDiscriminator: {\n      serializedName: \"scope\",\n      clientName: \"scope\"\n    },\n    modelProperties: {\n      lookBackPeriod: {\n        serializedName: \"lookBackPeriod\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceFlexibilityRatio: {\n        serializedName: \"instanceFlexibilityRatio\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      instanceFlexibilityGroup: {\n        serializedName: \"instanceFlexibilityGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      normalizedSize: {\n        serializedName: \"normalizedSize\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recommendedQuantityNormalized: {\n        serializedName: \"recommendedQuantityNormalized\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      meterId: {\n        serializedName: \"meterId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      term: {\n        serializedName: \"term\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costWithNoReservedInstances: {\n        serializedName: \"costWithNoReservedInstances\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      recommendedQuantity: {\n        serializedName: \"recommendedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalCostWithReservedInstances: {\n        serializedName: \"totalCostWithReservedInstances\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      netSavings: {\n        serializedName: \"netSavings\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      firstUsageDate: {\n        serializedName: \"firstUsageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      scope: {\n        serializedName: \"scope\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      skuProperties: {\n        serializedName: \"skuProperties\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuProperty\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuProperty\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DownloadProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DownloadProperties\",\n    modelProperties: {\n      downloadUrl: {\n        serializedName: \"downloadUrl\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validTill: {\n        serializedName: \"validTill\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageDetail: coreClient.CompositeMapper = {\n  serializedName: \"UsageDetail\",\n  type: {\n    name: \"Composite\",\n    className: \"UsageDetail\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Marketplace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Marketplace\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      billingPeriodId: {\n        serializedName: \"properties.billingPeriodId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageStart: {\n        serializedName: \"properties.usageStart\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      usageEnd: {\n        serializedName: \"properties.usageEnd\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resourceRate: {\n        serializedName: \"properties.resourceRate\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      offerName: {\n        serializedName: \"properties.offerName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"properties.resourceGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalInfo: {\n        serializedName: \"properties.additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      orderNumber: {\n        serializedName: \"properties.orderNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceName: {\n        serializedName: \"properties.instanceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceId: {\n        serializedName: \"properties.instanceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      consumedQuantity: {\n        serializedName: \"properties.consumedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"properties.unitOfMeasure\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pretaxCost: {\n        serializedName: \"properties.pretaxCost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isEstimated: {\n        serializedName: \"properties.isEstimated\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      meterId: {\n        serializedName: \"properties.meterId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      subscriptionGuid: {\n        serializedName: \"properties.subscriptionGuid\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      subscriptionName: {\n        serializedName: \"properties.subscriptionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accountName: {\n        serializedName: \"properties.accountName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      departmentName: {\n        serializedName: \"properties.departmentName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      consumedService: {\n        serializedName: \"properties.consumedService\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costCenter: {\n        serializedName: \"properties.costCenter\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalProperties: {\n        serializedName: \"properties.additionalProperties\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherName: {\n        serializedName: \"properties.publisherName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      planName: {\n        serializedName: \"properties.planName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isRecurringCharge: {\n        serializedName: \"properties.isRecurringCharge\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Balance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Balance\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      beginningBalance: {\n        serializedName: \"properties.beginningBalance\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      endingBalance: {\n        serializedName: \"properties.endingBalance\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      newPurchases: {\n        serializedName: \"properties.newPurchases\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      adjustments: {\n        serializedName: \"properties.adjustments\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      utilized: {\n        serializedName: \"properties.utilized\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      serviceOverage: {\n        serializedName: \"properties.serviceOverage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      chargesBilledSeparately: {\n        serializedName: \"properties.chargesBilledSeparately\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalOverage: {\n        serializedName: \"properties.totalOverage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalUsage: {\n        serializedName: \"properties.totalUsage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      azureMarketplaceServiceCharges: {\n        serializedName: \"properties.azureMarketplaceServiceCharges\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingFrequency: {\n        serializedName: \"properties.billingFrequency\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priceHidden: {\n        serializedName: \"properties.priceHidden\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      newPurchasesDetails: {\n        serializedName: \"properties.newPurchasesDetails\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BalancePropertiesNewPurchasesDetailsItem\"\n            }\n          }\n        }\n      },\n      adjustmentDetails: {\n        serializedName: \"properties.adjustmentDetails\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BalancePropertiesAdjustmentDetailsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationSummary\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      reservationOrderId: {\n        serializedName: \"properties.reservationOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationId: {\n        serializedName: \"properties.reservationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      skuName: {\n        serializedName: \"properties.skuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservedHours: {\n        serializedName: \"properties.reservedHours\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      usageDate: {\n        serializedName: \"properties.usageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      usedHours: {\n        serializedName: \"properties.usedHours\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      minUtilizationPercentage: {\n        serializedName: \"properties.minUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      avgUtilizationPercentage: {\n        serializedName: \"properties.avgUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxUtilizationPercentage: {\n        serializedName: \"properties.maxUtilizationPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      kind: {\n        serializedName: \"properties.kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasedQuantity: {\n        serializedName: \"properties.purchasedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      remainingQuantity: {\n        serializedName: \"properties.remainingQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalReservedQuantity: {\n        serializedName: \"properties.totalReservedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      usedQuantity: {\n        serializedName: \"properties.usedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      utilizedPercentage: {\n        serializedName: \"properties.utilizedPercentage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationDetail\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      reservationOrderId: {\n        serializedName: \"properties.reservationOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceFlexibilityRatio: {\n        serializedName: \"properties.instanceFlexibilityRatio\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceFlexibilityGroup: {\n        serializedName: \"properties.instanceFlexibilityGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationId: {\n        serializedName: \"properties.reservationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      skuName: {\n        serializedName: \"properties.skuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservedHours: {\n        serializedName: \"properties.reservedHours\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      usageDate: {\n        serializedName: \"properties.usageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      usedHours: {\n        serializedName: \"properties.usedHours\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      instanceId: {\n        serializedName: \"properties.instanceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      totalReservedQuantity: {\n        serializedName: \"properties.totalReservedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      kind: {\n        serializedName: \"properties.kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationRecommendation: coreClient.CompositeMapper = {\n  serializedName: \"ReservationRecommendation\",\n  type: {\n    name: \"Composite\",\n    className: \"ReservationRecommendation\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      ...ResourceAttributes.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationRecommendationDetailsModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationRecommendationDetailsModel\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"properties.resource\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationRecommendationDetailsResourceProperties\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"properties.resourceGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      savings: {\n        serializedName: \"properties.savings\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationRecommendationDetailsSavingsProperties\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usage: {\n        serializedName: \"properties.usage\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationRecommendationDetailsUsageProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PriceSheetResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PriceSheetResult\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      pricesheets: {\n        serializedName: \"properties.pricesheets\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PriceSheetProperties\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"properties.nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      download: {\n        serializedName: \"properties.download\",\n        type: {\n          name: \"Composite\",\n          className: \"MeterDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementGroupAggregatedCostResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementGroupAggregatedCostResult\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      billingPeriodId: {\n        serializedName: \"properties.billingPeriodId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageStart: {\n        serializedName: \"properties.usageStart\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      usageEnd: {\n        serializedName: \"properties.usageEnd\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      azureCharges: {\n        serializedName: \"properties.azureCharges\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      marketplaceCharges: {\n        serializedName: \"properties.marketplaceCharges\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      chargesBilledSeparately: {\n        serializedName: \"properties.chargesBilledSeparately\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      children: {\n        serializedName: \"properties.children\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagementGroupAggregatedCostResult\"\n            }\n          }\n        }\n      },\n      includedSubscriptions: {\n        serializedName: \"properties.includedSubscriptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      excludedSubscriptions: {\n        serializedName: \"properties.excludedSubscriptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CreditSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreditSummary\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      balanceSummary: {\n        serializedName: \"properties.balanceSummary\",\n        type: {\n          name: \"Composite\",\n          className: \"CreditBalanceSummary\"\n        }\n      },\n      pendingCreditAdjustments: {\n        serializedName: \"properties.pendingCreditAdjustments\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      expiredCredit: {\n        serializedName: \"properties.expiredCredit\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      pendingEligibleCharges: {\n        serializedName: \"properties.pendingEligibleCharges\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      creditCurrency: {\n        serializedName: \"properties.creditCurrency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingCurrency: {\n        serializedName: \"properties.billingCurrency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reseller: {\n        serializedName: \"properties.reseller\",\n        type: {\n          name: \"Composite\",\n          className: \"Reseller\"\n        }\n      },\n      eTag: {\n        serializedName: \"properties.eTag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Budget: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Budget\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      category: {\n        serializedName: \"properties.category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"properties.amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeGrain: {\n        serializedName: \"properties.timeGrain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timePeriod: {\n        serializedName: \"properties.timePeriod\",\n        type: {\n          name: \"Composite\",\n          className: \"BudgetTimePeriod\"\n        }\n      },\n      filter: {\n        serializedName: \"properties.filter\",\n        type: {\n          name: \"Composite\",\n          className: \"BudgetFilter\"\n        }\n      },\n      currentSpend: {\n        serializedName: \"properties.currentSpend\",\n        type: {\n          name: \"Composite\",\n          className: \"CurrentSpend\"\n        }\n      },\n      notifications: {\n        serializedName: \"properties.notifications\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"Notification\" } }\n        }\n      },\n      forecastSpend: {\n        serializedName: \"properties.forecastSpend\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastSpend\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      tags: {\n        serializedName: \"properties.tags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Tag\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"properties.nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      previousLink: {\n        serializedName: \"properties.previousLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChargeSummary: coreClient.CompositeMapper = {\n  serializedName: \"ChargeSummary\",\n  type: {\n    name: \"Composite\",\n    className: \"ChargeSummary\",\n    uberParent: \"ProxyResource\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventSummary\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      transactionDate: {\n        serializedName: \"properties.transactionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      newCredit: {\n        serializedName: \"properties.newCredit\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      adjustments: {\n        serializedName: \"properties.adjustments\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      creditExpired: {\n        serializedName: \"properties.creditExpired\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      charges: {\n        serializedName: \"properties.charges\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      closedBalance: {\n        serializedName: \"properties.closedBalance\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      eventType: {\n        serializedName: \"properties.eventType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceNumber: {\n        serializedName: \"properties.invoiceNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfileId: {\n        serializedName: \"properties.billingProfileId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfileDisplayName: {\n        serializedName: \"properties.billingProfileDisplayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lotId: {\n        serializedName: \"properties.lotId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lotSource: {\n        serializedName: \"properties.lotSource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      canceledCredit: {\n        serializedName: \"properties.canceledCredit\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      creditCurrency: {\n        serializedName: \"properties.creditCurrency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingCurrency: {\n        serializedName: \"properties.billingCurrency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reseller: {\n        serializedName: \"properties.reseller\",\n        type: {\n          name: \"Composite\",\n          className: \"Reseller\"\n        }\n      },\n      creditExpiredInBillingCurrency: {\n        serializedName: \"properties.creditExpiredInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      },\n      newCreditInBillingCurrency: {\n        serializedName: \"properties.newCreditInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      },\n      adjustmentsInBillingCurrency: {\n        serializedName: \"properties.adjustmentsInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      },\n      chargesInBillingCurrency: {\n        serializedName: \"properties.chargesInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      },\n      closedBalanceInBillingCurrency: {\n        serializedName: \"properties.closedBalanceInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      },\n      eTagPropertiesETag: {\n        serializedName: \"properties.eTag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LotSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LotSummary\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      originalAmount: {\n        serializedName: \"properties.originalAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      closedBalance: {\n        serializedName: \"properties.closedBalance\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      source: {\n        serializedName: \"properties.source\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startDate: {\n        serializedName: \"properties.startDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expirationDate: {\n        serializedName: \"properties.expirationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      poNumber: {\n        serializedName: \"properties.poNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasedDate: {\n        serializedName: \"properties.purchasedDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creditCurrency: {\n        serializedName: \"properties.creditCurrency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingCurrency: {\n        serializedName: \"properties.billingCurrency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      originalAmountInBillingCurrency: {\n        serializedName: \"properties.originalAmountInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      },\n      closedBalanceInBillingCurrency: {\n        serializedName: \"properties.closedBalanceInBillingCurrency\",\n        type: {\n          name: \"Composite\",\n          className: \"AmountWithExchangeRate\"\n        }\n      },\n      reseller: {\n        serializedName: \"properties.reseller\",\n        type: {\n          name: \"Composite\",\n          className: \"Reseller\"\n        }\n      },\n      eTagPropertiesETag: {\n        serializedName: \"properties.eTag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationTransaction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationTransaction\",\n    modelProperties: {\n      ...ReservationTransactionResource.type.modelProperties,\n      eventDate: {\n        serializedName: \"properties.eventDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      reservationOrderId: {\n        serializedName: \"properties.reservationOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eventType: {\n        serializedName: \"properties.eventType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"properties.quantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      amount: {\n        serializedName: \"properties.amount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationOrderName: {\n        serializedName: \"properties.reservationOrderName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasingEnrollment: {\n        serializedName: \"properties.purchasingEnrollment\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasingSubscriptionGuid: {\n        serializedName: \"properties.purchasingSubscriptionGuid\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      purchasingSubscriptionName: {\n        serializedName: \"properties.purchasingSubscriptionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      armSkuName: {\n        serializedName: \"properties.armSkuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"properties.region\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accountName: {\n        serializedName: \"properties.accountName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accountOwnerEmail: {\n        serializedName: \"properties.accountOwnerEmail\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      departmentName: {\n        serializedName: \"properties.departmentName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costCenter: {\n        serializedName: \"properties.costCenter\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentEnrollment: {\n        serializedName: \"properties.currentEnrollment\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingFrequency: {\n        serializedName: \"properties.billingFrequency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingMonth: {\n        serializedName: \"properties.billingMonth\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      monetaryCommitment: {\n        serializedName: \"properties.monetaryCommitment\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      overage: {\n        serializedName: \"properties.overage\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModernReservationTransaction: coreClient.CompositeMapper = {\n  serializedName: \"Modern\",\n  type: {\n    name: \"Composite\",\n    className: \"ModernReservationTransaction\",\n    modelProperties: {\n      ...ReservationTransactionResource.type.modelProperties,\n      amount: {\n        serializedName: \"properties.amount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      armSkuName: {\n        serializedName: \"properties.armSkuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingFrequency: {\n        serializedName: \"properties.billingFrequency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfileId: {\n        serializedName: \"properties.billingProfileId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfileName: {\n        serializedName: \"properties.billingProfileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      eventDate: {\n        serializedName: \"properties.eventDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      eventType: {\n        serializedName: \"properties.eventType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoice: {\n        serializedName: \"properties.invoice\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceId: {\n        serializedName: \"properties.invoiceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceSectionId: {\n        serializedName: \"properties.invoiceSectionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceSectionName: {\n        serializedName: \"properties.invoiceSectionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasingSubscriptionGuid: {\n        serializedName: \"properties.purchasingSubscriptionGuid\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      purchasingSubscriptionName: {\n        serializedName: \"properties.purchasingSubscriptionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"properties.quantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      region: {\n        serializedName: \"properties.region\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationOrderId: {\n        serializedName: \"properties.reservationOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationOrderName: {\n        serializedName: \"properties.reservationOrderName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmountWithExchangeRate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmountWithExchangeRate\",\n    modelProperties: {\n      ...Amount.type.modelProperties,\n      exchangeRate: {\n        serializedName: \"exchangeRate\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      exchangeRateMonth: {\n        serializedName: \"exchangeRateMonth\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegacySingleScopeReservationRecommendationProperties: coreClient.CompositeMapper = {\n  serializedName: \"Single\",\n  type: {\n    name: \"Composite\",\n    className: \"LegacySingleScopeReservationRecommendationProperties\",\n    uberParent: \"LegacyReservationRecommendationProperties\",\n    polymorphicDiscriminator:\n      LegacyReservationRecommendationProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...LegacyReservationRecommendationProperties.type.modelProperties,\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegacySharedScopeReservationRecommendationProperties: coreClient.CompositeMapper = {\n  serializedName: \"Shared\",\n  type: {\n    name: \"Composite\",\n    className: \"LegacySharedScopeReservationRecommendationProperties\",\n    uberParent: \"LegacyReservationRecommendationProperties\",\n    polymorphicDiscriminator:\n      LegacyReservationRecommendationProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...LegacyReservationRecommendationProperties.type.modelProperties\n    }\n  }\n};\n\nexport const LegacyUsageDetail: coreClient.CompositeMapper = {\n  serializedName: \"legacy\",\n  type: {\n    name: \"Composite\",\n    className: \"LegacyUsageDetail\",\n    uberParent: \"UsageDetail\",\n    polymorphicDiscriminator: UsageDetail.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...UsageDetail.type.modelProperties,\n      billingAccountId: {\n        serializedName: \"properties.billingAccountId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingAccountName: {\n        serializedName: \"properties.billingAccountName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingPeriodStartDate: {\n        serializedName: \"properties.billingPeriodStartDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      billingPeriodEndDate: {\n        serializedName: \"properties.billingPeriodEndDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      billingProfileId: {\n        serializedName: \"properties.billingProfileId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfileName: {\n        serializedName: \"properties.billingProfileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accountOwnerId: {\n        serializedName: \"properties.accountOwnerId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accountName: {\n        serializedName: \"properties.accountName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"properties.subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionName: {\n        serializedName: \"properties.subscriptionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"properties.date\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      product: {\n        serializedName: \"properties.product\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partNumber: {\n        serializedName: \"properties.partNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterId: {\n        serializedName: \"properties.meterId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      meterDetails: {\n        serializedName: \"properties.meterDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"MeterDetailsResponse\"\n        }\n      },\n      quantity: {\n        serializedName: \"properties.quantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      effectivePrice: {\n        serializedName: \"properties.effectivePrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      cost: {\n        serializedName: \"properties.cost\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unitPrice: {\n        serializedName: \"properties.unitPrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingCurrency: {\n        serializedName: \"properties.billingCurrency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocation: {\n        serializedName: \"properties.resourceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      consumedService: {\n        serializedName: \"properties.consumedService\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"properties.resourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"properties.resourceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceInfo1: {\n        serializedName: \"properties.serviceInfo1\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceInfo2: {\n        serializedName: \"properties.serviceInfo2\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalInfo: {\n        serializedName: \"properties.additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceSection: {\n        serializedName: \"properties.invoiceSection\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costCenter: {\n        serializedName: \"properties.costCenter\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"properties.resourceGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationId: {\n        serializedName: \"properties.reservationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationName: {\n        serializedName: \"properties.reservationName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      productOrderId: {\n        serializedName: \"properties.productOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      productOrderName: {\n        serializedName: \"properties.productOrderName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      offerId: {\n        serializedName: \"properties.offerId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isAzureCreditEligible: {\n        serializedName: \"properties.isAzureCreditEligible\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherName: {\n        serializedName: \"properties.publisherName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherType: {\n        serializedName: \"properties.publisherType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      planName: {\n        serializedName: \"properties.planName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      chargeType: {\n        serializedName: \"properties.chargeType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      frequency: {\n        serializedName: \"properties.frequency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payGPrice: {\n        serializedName: \"properties.payGPrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      pricingModel: {\n        serializedName: \"properties.pricingModel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModernUsageDetail: coreClient.CompositeMapper = {\n  serializedName: \"modern\",\n  type: {\n    name: \"Composite\",\n    className: \"ModernUsageDetail\",\n    uberParent: \"UsageDetail\",\n    polymorphicDiscriminator: UsageDetail.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...UsageDetail.type.modelProperties,\n      billingAccountId: {\n        serializedName: \"properties.billingAccountId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      effectivePrice: {\n        serializedName: \"properties.effectivePrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      pricingModel: {\n        serializedName: \"properties.pricingModel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingAccountName: {\n        serializedName: \"properties.billingAccountName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingPeriodStartDate: {\n        serializedName: \"properties.billingPeriodStartDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      billingPeriodEndDate: {\n        serializedName: \"properties.billingPeriodEndDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      billingProfileId: {\n        serializedName: \"properties.billingProfileId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfileName: {\n        serializedName: \"properties.billingProfileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionGuid: {\n        serializedName: \"properties.subscriptionGuid\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionName: {\n        serializedName: \"properties.subscriptionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"properties.date\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      product: {\n        serializedName: \"properties.product\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterId: {\n        serializedName: \"properties.meterId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      meterName: {\n        serializedName: \"properties.meterName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterRegion: {\n        serializedName: \"properties.meterRegion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterCategory: {\n        serializedName: \"properties.meterCategory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      meterSubCategory: {\n        serializedName: \"properties.meterSubCategory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceFamily: {\n        serializedName: \"properties.serviceFamily\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"properties.quantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"properties.unitOfMeasure\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceName: {\n        serializedName: \"properties.instanceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costInUSD: {\n        serializedName: \"properties.costInUSD\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unitPrice: {\n        serializedName: \"properties.unitPrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingCurrencyCode: {\n        serializedName: \"properties.billingCurrencyCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocation: {\n        serializedName: \"properties.resourceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      consumedService: {\n        serializedName: \"properties.consumedService\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceInfo1: {\n        serializedName: \"properties.serviceInfo1\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceInfo2: {\n        serializedName: \"properties.serviceInfo2\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalInfo: {\n        serializedName: \"properties.additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceSectionId: {\n        serializedName: \"properties.invoiceSectionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceSectionName: {\n        serializedName: \"properties.invoiceSectionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costCenter: {\n        serializedName: \"properties.costCenter\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"properties.resourceGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationId: {\n        serializedName: \"properties.reservationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationName: {\n        serializedName: \"properties.reservationName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      productOrderId: {\n        serializedName: \"properties.productOrderId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      productOrderName: {\n        serializedName: \"properties.productOrderName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isAzureCreditEligible: {\n        serializedName: \"properties.isAzureCreditEligible\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherName: {\n        serializedName: \"properties.publisherName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherType: {\n        serializedName: \"properties.publisherType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      chargeType: {\n        serializedName: \"properties.chargeType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      frequency: {\n        serializedName: \"properties.frequency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costInBillingCurrency: {\n        serializedName: \"properties.costInBillingCurrency\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      costInPricingCurrency: {\n        serializedName: \"properties.costInPricingCurrency\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      exchangeRate: {\n        serializedName: \"properties.exchangeRate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      exchangeRateDate: {\n        serializedName: \"properties.exchangeRateDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      invoiceId: {\n        serializedName: \"properties.invoiceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      previousInvoiceId: {\n        serializedName: \"properties.previousInvoiceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pricingCurrencyCode: {\n        serializedName: \"properties.pricingCurrencyCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      productIdentifier: {\n        serializedName: \"properties.productIdentifier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocationNormalized: {\n        serializedName: \"properties.resourceLocationNormalized\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      servicePeriodStartDate: {\n        serializedName: \"properties.servicePeriodStartDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      servicePeriodEndDate: {\n        serializedName: \"properties.servicePeriodEndDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      customerTenantId: {\n        serializedName: \"properties.customerTenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerName: {\n        serializedName: \"properties.customerName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerTenantId: {\n        serializedName: \"properties.partnerTenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerName: {\n        serializedName: \"properties.partnerName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resellerMpnId: {\n        serializedName: \"properties.resellerMpnId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resellerName: {\n        serializedName: \"properties.resellerName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherId: {\n        serializedName: \"properties.publisherId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      marketPrice: {\n        serializedName: \"properties.marketPrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      exchangeRatePricingToBilling: {\n        serializedName: \"properties.exchangeRatePricingToBilling\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      paygCostInBillingCurrency: {\n        serializedName: \"properties.paygCostInBillingCurrency\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      paygCostInUSD: {\n        serializedName: \"properties.paygCostInUSD\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      partnerEarnedCreditRate: {\n        serializedName: \"properties.partnerEarnedCreditRate\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      partnerEarnedCreditApplied: {\n        serializedName: \"properties.partnerEarnedCreditApplied\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payGPrice: {\n        serializedName: \"properties.payGPrice\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      benefitId: {\n        serializedName: \"properties.benefitId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      benefitName: {\n        serializedName: \"properties.benefitName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"properties.provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costAllocationRuleName: {\n        serializedName: \"properties.costAllocationRuleName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegacyReservationRecommendation: coreClient.CompositeMapper = {\n  serializedName: \"legacy\",\n  type: {\n    name: \"Composite\",\n    className: \"LegacyReservationRecommendation\",\n    uberParent: \"ReservationRecommendation\",\n    polymorphicDiscriminator:\n      ReservationRecommendation.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ReservationRecommendation.type.modelProperties,\n      lookBackPeriod: {\n        serializedName: \"properties.lookBackPeriod\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceFlexibilityRatio: {\n        serializedName: \"properties.instanceFlexibilityRatio\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      instanceFlexibilityGroup: {\n        serializedName: \"properties.instanceFlexibilityGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      normalizedSize: {\n        serializedName: \"properties.normalizedSize\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recommendedQuantityNormalized: {\n        serializedName: \"properties.recommendedQuantityNormalized\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      meterId: {\n        serializedName: \"properties.meterId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      resourceType: {\n        serializedName: \"properties.resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costWithNoReservedInstances: {\n        serializedName: \"properties.costWithNoReservedInstances\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      recommendedQuantity: {\n        serializedName: \"properties.recommendedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalCostWithReservedInstances: {\n        serializedName: \"properties.totalCostWithReservedInstances\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      netSavings: {\n        serializedName: \"properties.netSavings\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      firstUsageDate: {\n        serializedName: \"properties.firstUsageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      skuProperties: {\n        serializedName: \"properties.skuProperties\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuProperty\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ModernReservationRecommendation: coreClient.CompositeMapper = {\n  serializedName: \"modern\",\n  type: {\n    name: \"Composite\",\n    className: \"ModernReservationRecommendation\",\n    uberParent: \"ReservationRecommendation\",\n    polymorphicDiscriminator:\n      ReservationRecommendation.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ReservationRecommendation.type.modelProperties,\n      locationPropertiesLocation: {\n        serializedName: \"properties.location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lookBackPeriod: {\n        serializedName: \"properties.lookBackPeriod\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      instanceFlexibilityRatio: {\n        serializedName: \"properties.instanceFlexibilityRatio\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      instanceFlexibilityGroup: {\n        serializedName: \"properties.instanceFlexibilityGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      normalizedSize: {\n        serializedName: \"properties.normalizedSize\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recommendedQuantityNormalized: {\n        serializedName: \"properties.recommendedQuantityNormalized\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      meterId: {\n        serializedName: \"properties.meterId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costWithNoReservedInstances: {\n        serializedName: \"properties.costWithNoReservedInstances\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      recommendedQuantity: {\n        serializedName: \"properties.recommendedQuantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalCostWithReservedInstances: {\n        serializedName: \"properties.totalCostWithReservedInstances\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      netSavings: {\n        serializedName: \"properties.netSavings\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      firstUsageDate: {\n        serializedName: \"properties.firstUsageDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      skuProperties: {\n        serializedName: \"properties.skuProperties\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuProperty\"\n            }\n          }\n        }\n      },\n      skuName: {\n        serializedName: \"properties.skuName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegacyChargeSummary: coreClient.CompositeMapper = {\n  serializedName: \"legacy\",\n  type: {\n    name: \"Composite\",\n    className: \"LegacyChargeSummary\",\n    uberParent: \"ChargeSummary\",\n    polymorphicDiscriminator: ChargeSummary.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ChargeSummary.type.modelProperties,\n      billingPeriodId: {\n        serializedName: \"properties.billingPeriodId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageStart: {\n        serializedName: \"properties.usageStart\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageEnd: {\n        serializedName: \"properties.usageEnd\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureCharges: {\n        serializedName: \"properties.azureCharges\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      chargesBilledSeparately: {\n        serializedName: \"properties.chargesBilledSeparately\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      marketplaceCharges: {\n        serializedName: \"properties.marketplaceCharges\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      currency: {\n        serializedName: \"properties.currency\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModernChargeSummary: coreClient.CompositeMapper = {\n  serializedName: \"modern\",\n  type: {\n    name: \"Composite\",\n    className: \"ModernChargeSummary\",\n    uberParent: \"ChargeSummary\",\n    polymorphicDiscriminator: ChargeSummary.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ChargeSummary.type.modelProperties,\n      billingPeriodId: {\n        serializedName: \"properties.billingPeriodId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageStart: {\n        serializedName: \"properties.usageStart\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      usageEnd: {\n        serializedName: \"properties.usageEnd\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureCharges: {\n        serializedName: \"properties.azureCharges\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      chargesBilledSeparately: {\n        serializedName: \"properties.chargesBilledSeparately\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      marketplaceCharges: {\n        serializedName: \"properties.marketplaceCharges\",\n        type: {\n          name: \"Composite\",\n          className: \"Amount\"\n        }\n      },\n      billingAccountId: {\n        serializedName: \"properties.billingAccountId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfileId: {\n        serializedName: \"properties.billingProfileId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceSectionId: {\n        serializedName: \"properties.invoiceSectionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerId: {\n        serializedName: \"properties.customerId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isInvoiced: {\n        serializedName: \"properties.isInvoiced\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegacyReservationTransaction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LegacyReservationTransaction\",\n    modelProperties: {\n      ...ReservationTransaction.type.modelProperties\n    }\n  }\n};\n\nexport let discriminators = {\n  LegacyReservationRecommendationProperties: LegacyReservationRecommendationProperties,\n  \"Resource.UsageDetail\": UsageDetail,\n  \"Resource.ReservationRecommendation\": ReservationRecommendation,\n  \"ProxyResource.ChargeSummary\": ChargeSummary,\n  \"LegacyReservationRecommendationProperties.Single\": LegacySingleScopeReservationRecommendationProperties,\n  \"LegacyReservationRecommendationProperties.Shared\": LegacySharedScopeReservationRecommendationProperties,\n  \"UsageDetail.legacy\": LegacyUsageDetail,\n  \"UsageDetail.modern\": ModernUsageDetail,\n  \"ReservationRecommendation.legacy\": LegacyReservationRecommendation,\n  \"ReservationRecommendation.modern\": ModernReservationRecommendation,\n  \"ChargeSummary.legacy\": LegacyChargeSummary,\n  \"ChargeSummary.modern\": ModernChargeSummary\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport { Budget as BudgetMapper } from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const scope: OperationURLParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    serializedName: \"scope\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skiptoken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skiptoken\"],\n  mapper: {\n    serializedName: \"$skiptoken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const metric: OperationQueryParameter = {\n  parameterPath: [\"options\", \"metric\"],\n  mapper: {\n    serializedName: \"metric\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const budgetName: OperationURLParameter = {\n  parameterPath: \"budgetName\",\n  mapper: {\n    serializedName: \"budgetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BudgetMapper\n};\n\nexport const startDate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"startDate\"],\n  mapper: {\n    serializedName: \"startDate\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endDate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"endDate\"],\n  mapper: {\n    serializedName: \"endDate\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apply: OperationQueryParameter = {\n  parameterPath: [\"options\", \"apply\"],\n  mapper: {\n    serializedName: \"$apply\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const billingAccountId: OperationURLParameter = {\n  parameterPath: \"billingAccountId\",\n  mapper: {\n    serializedName: \"billingAccountId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const billingPeriodName: OperationURLParameter = {\n  parameterPath: \"billingPeriodName\",\n  mapper: {\n    serializedName: \"billingPeriodName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const reservationOrderId: OperationURLParameter = {\n  parameterPath: \"reservationOrderId\",\n  mapper: {\n    serializedName: \"reservationOrderId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const grain: OperationQueryParameter = {\n  parameterPath: \"grain\",\n  mapper: {\n    serializedName: \"grain\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const reservationId: OperationURLParameter = {\n  parameterPath: \"reservationId\",\n  mapper: {\n    serializedName: \"reservationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const reservationId1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"reservationId\"],\n  mapper: {\n    serializedName: \"reservationId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const reservationOrderId1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"reservationOrderId\"],\n  mapper: {\n    serializedName: \"reservationOrderId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter1: OperationQueryParameter = {\n  parameterPath: \"filter\",\n  mapper: {\n    serializedName: \"$filter\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const region: OperationQueryParameter = {\n  parameterPath: \"region\",\n  mapper: {\n    serializedName: \"region\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const term: OperationQueryParameter = {\n  parameterPath: \"term\",\n  mapper: {\n    serializedName: \"term\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const lookBackPeriod: OperationQueryParameter = {\n  parameterPath: \"lookBackPeriod\",\n  mapper: {\n    serializedName: \"lookBackPeriod\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const product: OperationQueryParameter = {\n  parameterPath: \"product\",\n  mapper: {\n    serializedName: \"product\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const billingProfileId: OperationURLParameter = {\n  parameterPath: \"billingProfileId\",\n  mapper: {\n    serializedName: \"billingProfileId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const managementGroupId: OperationURLParameter = {\n  parameterPath: \"managementGroupId\",\n  mapper: {\n    serializedName: \"managementGroupId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const startDate1: OperationQueryParameter = {\n  parameterPath: \"startDate\",\n  mapper: {\n    serializedName: \"startDate\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endDate1: OperationQueryParameter = {\n  parameterPath: \"endDate\",\n  mapper: {\n    serializedName: \"endDate\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { UsageDetails } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  UsageDetailUnion,\n  UsageDetailsListNextOptionalParams,\n  UsageDetailsListOptionalParams,\n  UsageDetailsListResponse,\n  UsageDetailsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing UsageDetails operations. */\nexport class UsageDetailsImpl implements UsageDetails {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class UsageDetails class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the usage details for the defined scope. Usage details are available via this API only for May\n   * 1, 2014 or later.\n   * @param scope The scope associated with usage details operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,\n   *              '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope\n   *              and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group\n   *              scope. For subscription, billing account, department, enrollment account and management group, you\n   *              can also add billing period to the scope using\n   *              '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing\n   *              period at department scope use\n   *              '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'.\n   *              Also, Modern Commerce Account scopes are\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for billingAccount scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for\n   *              partners.\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: UsageDetailsListOptionalParams\n  ): PagedAsyncIterableIterator<UsageDetailUnion> {\n    const iter = this.listPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    options?: UsageDetailsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<UsageDetailUnion[]> {\n    let result: UsageDetailsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    options?: UsageDetailsListOptionalParams\n  ): AsyncIterableIterator<UsageDetailUnion> {\n    for await (const page of this.listPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the usage details for the defined scope. Usage details are available via this API only for May\n   * 1, 2014 or later.\n   * @param scope The scope associated with usage details operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,\n   *              '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope\n   *              and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group\n   *              scope. For subscription, billing account, department, enrollment account and management group, you\n   *              can also add billing period to the scope using\n   *              '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing\n   *              period at department scope use\n   *              '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'.\n   *              Also, Modern Commerce Account scopes are\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for billingAccount scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for\n   *              partners.\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    options?: UsageDetailsListOptionalParams\n  ): Promise<UsageDetailsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param scope The scope associated with usage details operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,\n   *              '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope\n   *              and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group\n   *              scope. For subscription, billing account, department, enrollment account and management group, you\n   *              can also add billing period to the scope using\n   *              '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing\n   *              period at department scope use\n   *              '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'.\n   *              Also, Modern Commerce Account scopes are\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for billingAccount scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for\n   *              partners.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    scope: string,\n    nextLink: string,\n    options?: UsageDetailsListNextOptionalParams\n  ): Promise<UsageDetailsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/usageDetails\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.expand,\n    Parameters.filter,\n    Parameters.skiptoken,\n    Parameters.top,\n    Parameters.apiVersion,\n    Parameters.metric\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Marketplaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  Marketplace,\n  MarketplacesListNextOptionalParams,\n  MarketplacesListOptionalParams,\n  MarketplacesListResponse,\n  MarketplacesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Marketplaces operations. */\nexport class MarketplacesImpl implements Marketplaces {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class Marketplaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API\n   * only for May 1, 2014 or later.\n   * @param scope The scope associated with marketplace operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,\n   *              '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope\n   *              and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group\n   *              scope. For subscription, billing account, department, enrollment account and ManagementGroup, you\n   *              can also add billing period to the scope using\n   *              '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing\n   *              period at department scope use\n   *              '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: MarketplacesListOptionalParams\n  ): PagedAsyncIterableIterator<Marketplace> {\n    const iter = this.listPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    options?: MarketplacesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Marketplace[]> {\n    let result: MarketplacesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    options?: MarketplacesListOptionalParams\n  ): AsyncIterableIterator<Marketplace> {\n    for await (const page of this.listPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API\n   * only for May 1, 2014 or later.\n   * @param scope The scope associated with marketplace operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,\n   *              '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope\n   *              and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group\n   *              scope. For subscription, billing account, department, enrollment account and ManagementGroup, you\n   *              can also add billing period to the scope using\n   *              '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing\n   *              period at department scope use\n   *              '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    options?: MarketplacesListOptionalParams\n  ): Promise<MarketplacesListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param scope The scope associated with marketplace operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope,\n   *              '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope\n   *              and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group\n   *              scope. For subscription, billing account, department, enrollment account and ManagementGroup, you\n   *              can also add billing period to the scope using\n   *              '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing\n   *              period at department scope use\n   *              '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    scope: string,\n    nextLink: string,\n    options?: MarketplacesListNextOptionalParams\n  ): Promise<MarketplacesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/marketplaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MarketplacesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.filter,\n    Parameters.skiptoken,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MarketplacesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Budgets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  Budget,\n  BudgetsListNextOptionalParams,\n  BudgetsListOptionalParams,\n  BudgetsListResponse,\n  BudgetsGetOptionalParams,\n  BudgetsGetResponse,\n  BudgetsCreateOrUpdateOptionalParams,\n  BudgetsCreateOrUpdateResponse,\n  BudgetsDeleteOptionalParams,\n  BudgetsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Budgets operations. */\nexport class BudgetsImpl implements Budgets {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class Budgets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all budgets for the defined scope.\n   * @param scope The scope associated with budget operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope.\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: BudgetsListOptionalParams\n  ): PagedAsyncIterableIterator<Budget> {\n    const iter = this.listPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    options?: BudgetsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Budget[]> {\n    let result: BudgetsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    options?: BudgetsListOptionalParams\n  ): AsyncIterableIterator<Budget> {\n    for await (const page of this.listPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all budgets for the defined scope.\n   * @param scope The scope associated with budget operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope.\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    options?: BudgetsListOptionalParams\n  ): Promise<BudgetsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the budget for the scope by budget name.\n   * @param scope The scope associated with budget operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope.\n   * @param budgetName Budget Name.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    budgetName: string,\n    options?: BudgetsGetOptionalParams\n  ): Promise<BudgetsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, budgetName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to create or update a budget. You can optionally provide an eTag if desired as a form\n   * of concurrency control. To obtain the latest eTag for a given budget, perform a get operation prior\n   * to your put operation.\n   * @param scope The scope associated with budget operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope.\n   * @param budgetName Budget Name.\n   * @param parameters Parameters supplied to the Create Budget operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    scope: string,\n    budgetName: string,\n    parameters: Budget,\n    options?: BudgetsCreateOrUpdateOptionalParams\n  ): Promise<BudgetsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, budgetName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to delete a budget.\n   * @param scope The scope associated with budget operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope.\n   * @param budgetName Budget Name.\n   * @param options The options parameters.\n   */\n  delete(\n    scope: string,\n    budgetName: string,\n    options?: BudgetsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, budgetName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param scope The scope associated with budget operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}'\n   *              for Management Group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    scope: string,\n    nextLink: string,\n    options?: BudgetsListNextOptionalParams\n  ): Promise<BudgetsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/budgets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BudgetsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/budgets/{budgetName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Budget\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.budgetName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/budgets/{budgetName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Budget\n    },\n    201: {\n      bodyMapper: Mappers.Budget\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.budgetName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/budgets/{budgetName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.budgetName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BudgetsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Tags } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport { TagsGetOptionalParams, TagsGetResponse } from \"../models\";\n\n/** Class containing Tags operations. */\nexport class TagsImpl implements Tags {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class Tags class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all available tag keys for the defined scope\n   * @param scope The scope associated with tags operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope and\n   *              '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope..\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    options?: TagsGetOptionalParams\n  ): Promise<TagsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/tags\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Charges } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport { ChargesListOptionalParams, ChargesListResponse } from \"../models\";\n\n/** Class containing Charges operations. */\nexport class ChargesImpl implements Charges {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class Charges class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the charges based for the defined scope.\n   * @param scope The scope associated with charges operations. This includes\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for\n   *              Department scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'\n   *              for EnrollmentAccount scope. For department and enrollment accounts, you can also add billing period\n   *              to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to\n   *              specify billing period at department scope use\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'.\n   *              Also, Modern Commerce Account scopes are\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for billingAccount scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope,\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'\n   *              for invoiceSection scope, and\n   *              'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for\n   *              partners.\n   * @param options The options parameters.\n   */\n  list(\n    scope: string,\n    options?: ChargesListOptionalParams\n  ): Promise<ChargesListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/charges\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChargesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.filter,\n    Parameters.apiVersion,\n    Parameters.startDate,\n    Parameters.endDate,\n    Parameters.apply\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Balances } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  BalancesGetByBillingAccountOptionalParams,\n  BalancesGetByBillingAccountResponse,\n  BalancesGetForBillingPeriodByBillingAccountOptionalParams,\n  BalancesGetForBillingPeriodByBillingAccountResponse\n} from \"../models\";\n\n/** Class containing Balances operations. */\nexport class BalancesImpl implements Balances {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class Balances class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the balances for a scope by billingAccountId. Balances are available via this API only for May\n   * 1, 2014 or later.\n   * @param billingAccountId BillingAccount ID\n   * @param options The options parameters.\n   */\n  getByBillingAccount(\n    billingAccountId: string,\n    options?: BalancesGetByBillingAccountOptionalParams\n  ): Promise<BalancesGetByBillingAccountResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      getByBillingAccountOperationSpec\n    );\n  }\n\n  /**\n   * Gets the balances for a scope by billing period and billingAccountId. Balances are available via\n   * this API only for May 1, 2014 or later.\n   * @param billingAccountId BillingAccount ID\n   * @param billingPeriodName Billing Period Name.\n   * @param options The options parameters.\n   */\n  getForBillingPeriodByBillingAccount(\n    billingAccountId: string,\n    billingPeriodName: string,\n    options?: BalancesGetForBillingPeriodByBillingAccountOptionalParams\n  ): Promise<BalancesGetForBillingPeriodByBillingAccountResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingPeriodName, options },\n      getForBillingPeriodByBillingAccountOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getByBillingAccountOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Balance\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getForBillingPeriodByBillingAccountOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Balance\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingPeriodName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ReservationsSummaries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  ReservationSummary,\n  ReservationsSummariesListByReservationOrderNextOptionalParams,\n  Datagrain,\n  ReservationsSummariesListByReservationOrderOptionalParams,\n  ReservationsSummariesListByReservationOrderResponse,\n  ReservationsSummariesListByReservationOrderAndReservationNextOptionalParams,\n  ReservationsSummariesListByReservationOrderAndReservationOptionalParams,\n  ReservationsSummariesListByReservationOrderAndReservationResponse,\n  ReservationsSummariesListNextOptionalParams,\n  ReservationsSummariesListOptionalParams,\n  ReservationsSummariesListResponse,\n  ReservationsSummariesListByReservationOrderNextResponse,\n  ReservationsSummariesListByReservationOrderAndReservationNextResponse,\n  ReservationsSummariesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReservationsSummaries operations. */\nexport class ReservationsSummariesImpl implements ReservationsSummaries {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class ReservationsSummaries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the reservations summaries for daily or monthly grain.\n   * @param reservationOrderId Order Id of the reservation\n   * @param grain Can be daily or monthly\n   * @param options The options parameters.\n   */\n  public listByReservationOrder(\n    reservationOrderId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderOptionalParams\n  ): PagedAsyncIterableIterator<ReservationSummary> {\n    const iter = this.listByReservationOrderPagingAll(\n      reservationOrderId,\n      grain,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByReservationOrderPagingPage(\n          reservationOrderId,\n          grain,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByReservationOrderPagingPage(\n    reservationOrderId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationSummary[]> {\n    let result: ReservationsSummariesListByReservationOrderResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByReservationOrder(\n        reservationOrderId,\n        grain,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByReservationOrderNext(\n        reservationOrderId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByReservationOrderPagingAll(\n    reservationOrderId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderOptionalParams\n  ): AsyncIterableIterator<ReservationSummary> {\n    for await (const page of this.listByReservationOrderPagingPage(\n      reservationOrderId,\n      grain,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the reservations summaries for daily or monthly grain.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation\n   * @param grain Can be daily or monthly\n   * @param options The options parameters.\n   */\n  public listByReservationOrderAndReservation(\n    reservationOrderId: string,\n    reservationId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderAndReservationOptionalParams\n  ): PagedAsyncIterableIterator<ReservationSummary> {\n    const iter = this.listByReservationOrderAndReservationPagingAll(\n      reservationOrderId,\n      reservationId,\n      grain,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByReservationOrderAndReservationPagingPage(\n          reservationOrderId,\n          reservationId,\n          grain,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByReservationOrderAndReservationPagingPage(\n    reservationOrderId: string,\n    reservationId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderAndReservationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationSummary[]> {\n    let result: ReservationsSummariesListByReservationOrderAndReservationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByReservationOrderAndReservation(\n        reservationOrderId,\n        reservationId,\n        grain,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByReservationOrderAndReservationNext(\n        reservationOrderId,\n        reservationId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByReservationOrderAndReservationPagingAll(\n    reservationOrderId: string,\n    reservationId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderAndReservationOptionalParams\n  ): AsyncIterableIterator<ReservationSummary> {\n    for await (const page of this.listByReservationOrderAndReservationPagingPage(\n      reservationOrderId,\n      reservationId,\n      grain,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the reservations summaries for the defined scope daily or monthly grain.\n   * @param scope The scope associated with reservations summaries operations. This includes\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy),\n   *              and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope (modern).\n   * @param grain Can be daily or monthly\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListOptionalParams\n  ): PagedAsyncIterableIterator<ReservationSummary> {\n    const iter = this.listPagingAll(scope, grain, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, grain, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationSummary[]> {\n    let result: ReservationsSummariesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(scope, grain, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListOptionalParams\n  ): AsyncIterableIterator<ReservationSummary> {\n    for await (const page of this.listPagingPage(scope, grain, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the reservations summaries for daily or monthly grain.\n   * @param reservationOrderId Order Id of the reservation\n   * @param grain Can be daily or monthly\n   * @param options The options parameters.\n   */\n  private _listByReservationOrder(\n    reservationOrderId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderOptionalParams\n  ): Promise<ReservationsSummariesListByReservationOrderResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, grain, options },\n      listByReservationOrderOperationSpec\n    );\n  }\n\n  /**\n   * Lists the reservations summaries for daily or monthly grain.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation\n   * @param grain Can be daily or monthly\n   * @param options The options parameters.\n   */\n  private _listByReservationOrderAndReservation(\n    reservationOrderId: string,\n    reservationId: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListByReservationOrderAndReservationOptionalParams\n  ): Promise<\n    ReservationsSummariesListByReservationOrderAndReservationResponse\n  > {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, grain, options },\n      listByReservationOrderAndReservationOperationSpec\n    );\n  }\n\n  /**\n   * Lists the reservations summaries for the defined scope daily or monthly grain.\n   * @param scope The scope associated with reservations summaries operations. This includes\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy),\n   *              and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope (modern).\n   * @param grain Can be daily or monthly\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    grain: Datagrain,\n    options?: ReservationsSummariesListOptionalParams\n  ): Promise<ReservationsSummariesListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, grain, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListByReservationOrderNext\n   * @param reservationOrderId Order Id of the reservation\n   * @param nextLink The nextLink from the previous successful call to the ListByReservationOrder method.\n   * @param options The options parameters.\n   */\n  private _listByReservationOrderNext(\n    reservationOrderId: string,\n    nextLink: string,\n    options?: ReservationsSummariesListByReservationOrderNextOptionalParams\n  ): Promise<ReservationsSummariesListByReservationOrderNextResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, nextLink, options },\n      listByReservationOrderNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByReservationOrderAndReservationNext\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListByReservationOrderAndReservation method.\n   * @param options The options parameters.\n   */\n  private _listByReservationOrderAndReservationNext(\n    reservationOrderId: string,\n    reservationId: string,\n    nextLink: string,\n    options?: ReservationsSummariesListByReservationOrderAndReservationNextOptionalParams\n  ): Promise<\n    ReservationsSummariesListByReservationOrderAndReservationNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, nextLink, options },\n      listByReservationOrderAndReservationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param scope The scope associated with reservations summaries operations. This includes\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy),\n   *              and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope (modern).\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    scope: string,\n    nextLink: string,\n    options?: ReservationsSummariesListNextOptionalParams\n  ): Promise<ReservationsSummariesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByReservationOrderOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion, Parameters.grain],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByReservationOrderAndReservationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion, Parameters.grain],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/reservationSummaries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.filter,\n    Parameters.apiVersion,\n    Parameters.startDate,\n    Parameters.endDate,\n    Parameters.grain,\n    Parameters.reservationId1,\n    Parameters.reservationOrderId1\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByReservationOrderNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.reservationOrderId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByReservationOrderAndReservationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationSummariesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ReservationsDetails } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  ReservationDetail,\n  ReservationsDetailsListByReservationOrderNextOptionalParams,\n  ReservationsDetailsListByReservationOrderOptionalParams,\n  ReservationsDetailsListByReservationOrderResponse,\n  ReservationsDetailsListByReservationOrderAndReservationNextOptionalParams,\n  ReservationsDetailsListByReservationOrderAndReservationOptionalParams,\n  ReservationsDetailsListByReservationOrderAndReservationResponse,\n  ReservationsDetailsListNextOptionalParams,\n  ReservationsDetailsListOptionalParams,\n  ReservationsDetailsListResponse,\n  ReservationsDetailsListByReservationOrderNextResponse,\n  ReservationsDetailsListByReservationOrderAndReservationNextResponse,\n  ReservationsDetailsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReservationsDetails operations. */\nexport class ReservationsDetailsImpl implements ReservationsDetails {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class ReservationsDetails class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the reservations details for provided date range.\n   * @param reservationOrderId Order Id of the reservation\n   * @param filter Filter reservation details by date range. The properties/UsageDate for start date and\n   *               end date. The filter supports 'le' and  'ge'\n   * @param options The options parameters.\n   */\n  public listByReservationOrder(\n    reservationOrderId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderOptionalParams\n  ): PagedAsyncIterableIterator<ReservationDetail> {\n    const iter = this.listByReservationOrderPagingAll(\n      reservationOrderId,\n      filter,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByReservationOrderPagingPage(\n          reservationOrderId,\n          filter,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByReservationOrderPagingPage(\n    reservationOrderId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationDetail[]> {\n    let result: ReservationsDetailsListByReservationOrderResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByReservationOrder(\n        reservationOrderId,\n        filter,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByReservationOrderNext(\n        reservationOrderId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByReservationOrderPagingAll(\n    reservationOrderId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderOptionalParams\n  ): AsyncIterableIterator<ReservationDetail> {\n    for await (const page of this.listByReservationOrderPagingPage(\n      reservationOrderId,\n      filter,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the reservations details for provided date range.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation\n   * @param filter Filter reservation details by date range. The properties/UsageDate for start date and\n   *               end date. The filter supports 'le' and  'ge'\n   * @param options The options parameters.\n   */\n  public listByReservationOrderAndReservation(\n    reservationOrderId: string,\n    reservationId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderAndReservationOptionalParams\n  ): PagedAsyncIterableIterator<ReservationDetail> {\n    const iter = this.listByReservationOrderAndReservationPagingAll(\n      reservationOrderId,\n      reservationId,\n      filter,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByReservationOrderAndReservationPagingPage(\n          reservationOrderId,\n          reservationId,\n          filter,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByReservationOrderAndReservationPagingPage(\n    reservationOrderId: string,\n    reservationId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderAndReservationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationDetail[]> {\n    let result: ReservationsDetailsListByReservationOrderAndReservationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByReservationOrderAndReservation(\n        reservationOrderId,\n        reservationId,\n        filter,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByReservationOrderAndReservationNext(\n        reservationOrderId,\n        reservationId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByReservationOrderAndReservationPagingAll(\n    reservationOrderId: string,\n    reservationId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderAndReservationOptionalParams\n  ): AsyncIterableIterator<ReservationDetail> {\n    for await (const page of this.listByReservationOrderAndReservationPagingPage(\n      reservationOrderId,\n      reservationId,\n      filter,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the reservations details for the defined scope and provided date range.\n   * @param scope The scope associated with reservations details operations. This includes\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy),\n   *              and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope (modern).\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: ReservationsDetailsListOptionalParams\n  ): PagedAsyncIterableIterator<ReservationDetail> {\n    const iter = this.listPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    options?: ReservationsDetailsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationDetail[]> {\n    let result: ReservationsDetailsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    options?: ReservationsDetailsListOptionalParams\n  ): AsyncIterableIterator<ReservationDetail> {\n    for await (const page of this.listPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the reservations details for provided date range.\n   * @param reservationOrderId Order Id of the reservation\n   * @param filter Filter reservation details by date range. The properties/UsageDate for start date and\n   *               end date. The filter supports 'le' and  'ge'\n   * @param options The options parameters.\n   */\n  private _listByReservationOrder(\n    reservationOrderId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderOptionalParams\n  ): Promise<ReservationsDetailsListByReservationOrderResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, filter, options },\n      listByReservationOrderOperationSpec\n    );\n  }\n\n  /**\n   * Lists the reservations details for provided date range.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation\n   * @param filter Filter reservation details by date range. The properties/UsageDate for start date and\n   *               end date. The filter supports 'le' and  'ge'\n   * @param options The options parameters.\n   */\n  private _listByReservationOrderAndReservation(\n    reservationOrderId: string,\n    reservationId: string,\n    filter: string,\n    options?: ReservationsDetailsListByReservationOrderAndReservationOptionalParams\n  ): Promise<ReservationsDetailsListByReservationOrderAndReservationResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, filter, options },\n      listByReservationOrderAndReservationOperationSpec\n    );\n  }\n\n  /**\n   * Lists the reservations details for the defined scope and provided date range.\n   * @param scope The scope associated with reservations details operations. This includes\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy),\n   *              and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope (modern).\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    options?: ReservationsDetailsListOptionalParams\n  ): Promise<ReservationsDetailsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListByReservationOrderNext\n   * @param reservationOrderId Order Id of the reservation\n   * @param nextLink The nextLink from the previous successful call to the ListByReservationOrder method.\n   * @param options The options parameters.\n   */\n  private _listByReservationOrderNext(\n    reservationOrderId: string,\n    nextLink: string,\n    options?: ReservationsDetailsListByReservationOrderNextOptionalParams\n  ): Promise<ReservationsDetailsListByReservationOrderNextResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, nextLink, options },\n      listByReservationOrderNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByReservationOrderAndReservationNext\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListByReservationOrderAndReservation method.\n   * @param options The options parameters.\n   */\n  private _listByReservationOrderAndReservationNext(\n    reservationOrderId: string,\n    reservationId: string,\n    nextLink: string,\n    options?: ReservationsDetailsListByReservationOrderAndReservationNextOptionalParams\n  ): Promise<\n    ReservationsDetailsListByReservationOrderAndReservationNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, nextLink, options },\n      listByReservationOrderAndReservationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param scope The scope associated with reservations details operations. This includes\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy),\n   *              and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for BillingProfile scope (modern).\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    scope: string,\n    nextLink: string,\n    options?: ReservationsDetailsListNextOptionalParams\n  ): Promise<ReservationsDetailsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByReservationOrderOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationDetails\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter1],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByReservationOrderAndReservationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationDetails\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/reservationDetails\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.filter,\n    Parameters.apiVersion,\n    Parameters.startDate,\n    Parameters.endDate,\n    Parameters.reservationId1,\n    Parameters.reservationOrderId1\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByReservationOrderNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.reservationOrderId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByReservationOrderAndReservationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationDetailsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ReservationRecommendations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  ReservationRecommendationUnion,\n  ReservationRecommendationsListNextOptionalParams,\n  ReservationRecommendationsListOptionalParams,\n  ReservationRecommendationsListResponse,\n  ReservationRecommendationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReservationRecommendations operations. */\nexport class ReservationRecommendationsImpl\n  implements ReservationRecommendations {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class ReservationRecommendations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List of recommendations for purchasing reserved instances.\n   * @param scope The scope associated with reservation recommendations operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: ReservationRecommendationsListOptionalParams\n  ): PagedAsyncIterableIterator<ReservationRecommendationUnion> {\n    const iter = this.listPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    options?: ReservationRecommendationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationRecommendationUnion[]> {\n    let result: ReservationRecommendationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    options?: ReservationRecommendationsListOptionalParams\n  ): AsyncIterableIterator<ReservationRecommendationUnion> {\n    for await (const page of this.listPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List of recommendations for purchasing reserved instances.\n   * @param scope The scope associated with reservation recommendations operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    options?: ReservationRecommendationsListOptionalParams\n  ): Promise<ReservationRecommendationsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param scope The scope associated with reservation recommendations operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    scope: string,\n    nextLink: string,\n    options?: ReservationRecommendationsListNextOptionalParams\n  ): Promise<ReservationRecommendationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Consumption/reservationRecommendations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationRecommendationsListResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationRecommendationsListResult\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.scope, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ReservationRecommendationDetails } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  Term,\n  LookBackPeriod,\n  ReservationRecommendationDetailsGetOptionalParams,\n  ReservationRecommendationDetailsGetResponse\n} from \"../models\";\n\n/** Class containing ReservationRecommendationDetails operations. */\nexport class ReservationRecommendationDetailsImpl\n  implements ReservationRecommendationDetails {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class ReservationRecommendationDetails class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Details of a reservation recommendation for what-if analysis of reserved instances.\n   * @param scope The scope associated with reservation recommendation details operations. This includes\n   *              '/subscriptions/{subscriptionId}/' for subscription scope,\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,\n   *              /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and\n   *              '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'\n   *              for billingProfile scope\n   * @param region Used to select the region the recommendation should be generated for.\n   * @param term Specify length of reservation recommendation term.\n   * @param lookBackPeriod Filter the time period on which reservation recommendation results are based.\n   * @param product Filter the products for which reservation recommendation results are generated.\n   *                Examples: Standard_DS1_v2 (for VM), Premium_SSD_Managed_Disks_P30 (for Managed Disks)\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    region: string,\n    term: Term,\n    lookBackPeriod: LookBackPeriod,\n    product: string,\n    options?: ReservationRecommendationDetailsGetOptionalParams\n  ): Promise<ReservationRecommendationDetailsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, region, term, lookBackPeriod, product, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Consumption/reservationRecommendationDetails\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationRecommendationDetailsModel\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.HighCasedErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.region,\n    Parameters.term,\n    Parameters.lookBackPeriod,\n    Parameters.product\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ReservationTransactions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  ReservationTransaction,\n  ReservationTransactionsListNextOptionalParams,\n  ReservationTransactionsListOptionalParams,\n  ReservationTransactionsListResponse,\n  ModernReservationTransaction,\n  ReservationTransactionsListByBillingProfileNextOptionalParams,\n  ReservationTransactionsListByBillingProfileOptionalParams,\n  ReservationTransactionsListByBillingProfileResponse,\n  ReservationTransactionsListNextResponse,\n  ReservationTransactionsListByBillingProfileNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReservationTransactions operations. */\nexport class ReservationTransactionsImpl implements ReservationTransactions {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class ReservationTransactions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List of transactions for reserved instances on billing account scope\n   * @param billingAccountId BillingAccount ID\n   * @param options The options parameters.\n   */\n  public list(\n    billingAccountId: string,\n    options?: ReservationTransactionsListOptionalParams\n  ): PagedAsyncIterableIterator<ReservationTransaction> {\n    const iter = this.listPagingAll(billingAccountId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(billingAccountId, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    billingAccountId: string,\n    options?: ReservationTransactionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationTransaction[]> {\n    let result: ReservationTransactionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(billingAccountId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        billingAccountId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    billingAccountId: string,\n    options?: ReservationTransactionsListOptionalParams\n  ): AsyncIterableIterator<ReservationTransaction> {\n    for await (const page of this.listPagingPage(billingAccountId, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List of transactions for reserved instances on billing account scope\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param options The options parameters.\n   */\n  public listByBillingProfile(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: ReservationTransactionsListByBillingProfileOptionalParams\n  ): PagedAsyncIterableIterator<ModernReservationTransaction> {\n    const iter = this.listByBillingProfilePagingAll(\n      billingAccountId,\n      billingProfileId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingProfilePagingPage(\n          billingAccountId,\n          billingProfileId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingProfilePagingPage(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: ReservationTransactionsListByBillingProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ModernReservationTransaction[]> {\n    let result: ReservationTransactionsListByBillingProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingProfile(\n        billingAccountId,\n        billingProfileId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingProfileNext(\n        billingAccountId,\n        billingProfileId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingProfilePagingAll(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: ReservationTransactionsListByBillingProfileOptionalParams\n  ): AsyncIterableIterator<ModernReservationTransaction> {\n    for await (const page of this.listByBillingProfilePagingPage(\n      billingAccountId,\n      billingProfileId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List of transactions for reserved instances on billing account scope\n   * @param billingAccountId BillingAccount ID\n   * @param options The options parameters.\n   */\n  private _list(\n    billingAccountId: string,\n    options?: ReservationTransactionsListOptionalParams\n  ): Promise<ReservationTransactionsListResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * List of transactions for reserved instances on billing account scope\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfile(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: ReservationTransactionsListByBillingProfileOptionalParams\n  ): Promise<ReservationTransactionsListByBillingProfileResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, options },\n      listByBillingProfileOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param billingAccountId BillingAccount ID\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    billingAccountId: string,\n    nextLink: string,\n    options?: ReservationTransactionsListNextOptionalParams\n  ): Promise<ReservationTransactionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingProfileNext\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingProfile method.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfileNext(\n    billingAccountId: string,\n    billingProfileId: string,\n    nextLink: string,\n    options?: ReservationTransactionsListByBillingProfileNextOptionalParams\n  ): Promise<ReservationTransactionsListByBillingProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, nextLink, options },\n      listByBillingProfileNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationTransactionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/reservationTransactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModernReservationTransactionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationTransactionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModernReservationTransactionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PriceSheet } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  PriceSheetGetOptionalParams,\n  PriceSheetGetResponse,\n  PriceSheetGetByBillingPeriodOptionalParams,\n  PriceSheetGetByBillingPeriodResponse\n} from \"../models\";\n\n/** Class containing PriceSheet operations. */\nexport class PriceSheetImpl implements PriceSheet {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class PriceSheet class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the price sheet for a subscription. Price sheet is available via this API only for May 1, 2014\n   * or later.\n   * @param options The options parameters.\n   */\n  get(options?: PriceSheetGetOptionalParams): Promise<PriceSheetGetResponse> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n\n  /**\n   * Get the price sheet for a scope by subscriptionId and billing period. Price sheet is available via\n   * this API only for May 1, 2014 or later.\n   * @param billingPeriodName Billing Period Name.\n   * @param options The options parameters.\n   */\n  getByBillingPeriod(\n    billingPeriodName: string,\n    options?: PriceSheetGetByBillingPeriodOptionalParams\n  ): Promise<PriceSheetGetByBillingPeriodResponse> {\n    return this.client.sendOperationRequest(\n      { billingPeriodName, options },\n      getByBillingPeriodOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/pricesheets/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PriceSheetResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.expand,\n    Parameters.skiptoken,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByBillingPeriodOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PriceSheetResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.expand,\n    Parameters.skiptoken,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingPeriodName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available consumption REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available consumption REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Consumption/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { AggregatedCost } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  AggregatedCostGetByManagementGroupOptionalParams,\n  AggregatedCostGetByManagementGroupResponse,\n  AggregatedCostGetForBillingPeriodByManagementGroupOptionalParams,\n  AggregatedCostGetForBillingPeriodByManagementGroupResponse\n} from \"../models\";\n\n/** Class containing AggregatedCost operations. */\nexport class AggregatedCostImpl implements AggregatedCost {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class AggregatedCost class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Provides the aggregate cost of a management group and all child management groups by current billing\n   * period.\n   * @param managementGroupId Azure Management Group ID.\n   * @param options The options parameters.\n   */\n  getByManagementGroup(\n    managementGroupId: string,\n    options?: AggregatedCostGetByManagementGroupOptionalParams\n  ): Promise<AggregatedCostGetByManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, options },\n      getByManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Provides the aggregate cost of a management group and all child management groups by specified\n   * billing period\n   * @param managementGroupId Azure Management Group ID.\n   * @param billingPeriodName Billing Period Name.\n   * @param options The options parameters.\n   */\n  getForBillingPeriodByManagementGroup(\n    managementGroupId: string,\n    billingPeriodName: string,\n    options?: AggregatedCostGetForBillingPeriodByManagementGroupOptionalParams\n  ): Promise<AggregatedCostGetForBillingPeriodByManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, billingPeriodName, options },\n      getForBillingPeriodByManagementGroupOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getByManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/aggregatedcost\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementGroupAggregatedCostResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.managementGroupId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getForBillingPeriodByManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/aggregatedCost\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementGroupAggregatedCostResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingPeriodName,\n    Parameters.managementGroupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EventsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  EventSummary,\n  EventsListByBillingProfileNextOptionalParams,\n  EventsListByBillingProfileOptionalParams,\n  EventsListByBillingProfileResponse,\n  EventsListByBillingAccountNextOptionalParams,\n  EventsListByBillingAccountOptionalParams,\n  EventsListByBillingAccountResponse,\n  EventsListByBillingProfileNextResponse,\n  EventsListByBillingAccountNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EventsOperations operations. */\nexport class EventsOperationsImpl implements EventsOperations {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class EventsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a\n   * billing account or a billing profile for a given start and end date.\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param startDate Start date\n   * @param endDate End date\n   * @param options The options parameters.\n   */\n  public listByBillingProfile(\n    billingAccountId: string,\n    billingProfileId: string,\n    startDate: string,\n    endDate: string,\n    options?: EventsListByBillingProfileOptionalParams\n  ): PagedAsyncIterableIterator<EventSummary> {\n    const iter = this.listByBillingProfilePagingAll(\n      billingAccountId,\n      billingProfileId,\n      startDate,\n      endDate,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingProfilePagingPage(\n          billingAccountId,\n          billingProfileId,\n          startDate,\n          endDate,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingProfilePagingPage(\n    billingAccountId: string,\n    billingProfileId: string,\n    startDate: string,\n    endDate: string,\n    options?: EventsListByBillingProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EventSummary[]> {\n    let result: EventsListByBillingProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingProfile(\n        billingAccountId,\n        billingProfileId,\n        startDate,\n        endDate,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingProfileNext(\n        billingAccountId,\n        billingProfileId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingProfilePagingAll(\n    billingAccountId: string,\n    billingProfileId: string,\n    startDate: string,\n    endDate: string,\n    options?: EventsListByBillingProfileOptionalParams\n  ): AsyncIterableIterator<EventSummary> {\n    for await (const page of this.listByBillingProfilePagingPage(\n      billingAccountId,\n      billingProfileId,\n      startDate,\n      endDate,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a\n   * billing account or a billing profile for a given start and end date.\n   * @param billingAccountId BillingAccount ID\n   * @param options The options parameters.\n   */\n  public listByBillingAccount(\n    billingAccountId: string,\n    options?: EventsListByBillingAccountOptionalParams\n  ): PagedAsyncIterableIterator<EventSummary> {\n    const iter = this.listByBillingAccountPagingAll(billingAccountId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingAccountPagingPage(\n          billingAccountId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingAccountPagingPage(\n    billingAccountId: string,\n    options?: EventsListByBillingAccountOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EventSummary[]> {\n    let result: EventsListByBillingAccountResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingAccount(billingAccountId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingAccountNext(\n        billingAccountId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingAccountPagingAll(\n    billingAccountId: string,\n    options?: EventsListByBillingAccountOptionalParams\n  ): AsyncIterableIterator<EventSummary> {\n    for await (const page of this.listByBillingAccountPagingPage(\n      billingAccountId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a\n   * billing account or a billing profile for a given start and end date.\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param startDate Start date\n   * @param endDate End date\n   * @param options The options parameters.\n   */\n  private _listByBillingProfile(\n    billingAccountId: string,\n    billingProfileId: string,\n    startDate: string,\n    endDate: string,\n    options?: EventsListByBillingProfileOptionalParams\n  ): Promise<EventsListByBillingProfileResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, startDate, endDate, options },\n      listByBillingProfileOperationSpec\n    );\n  }\n\n  /**\n   * Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a\n   * billing account or a billing profile for a given start and end date.\n   * @param billingAccountId BillingAccount ID\n   * @param options The options parameters.\n   */\n  private _listByBillingAccount(\n    billingAccountId: string,\n    options?: EventsListByBillingAccountOptionalParams\n  ): Promise<EventsListByBillingAccountResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      listByBillingAccountOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingProfileNext\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingProfile method.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfileNext(\n    billingAccountId: string,\n    billingProfileId: string,\n    nextLink: string,\n    options?: EventsListByBillingProfileNextOptionalParams\n  ): Promise<EventsListByBillingProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, nextLink, options },\n      listByBillingProfileNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingAccountNext\n   * @param billingAccountId BillingAccount ID\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingAccount method.\n   * @param options The options parameters.\n   */\n  private _listByBillingAccountNext(\n    billingAccountId: string,\n    nextLink: string,\n    options?: EventsListByBillingAccountNextOptionalParams\n  ): Promise<EventsListByBillingAccountNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, nextLink, options },\n      listByBillingAccountNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByBillingProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/events\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startDate1,\n    Parameters.endDate1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingAccountOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/events\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingAccountNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { LotsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport {\n  LotSummary,\n  LotsListByBillingProfileNextOptionalParams,\n  LotsListByBillingProfileOptionalParams,\n  LotsListByBillingProfileResponse,\n  LotsListByBillingAccountNextOptionalParams,\n  LotsListByBillingAccountOptionalParams,\n  LotsListByBillingAccountResponse,\n  LotsListByBillingProfileNextResponse,\n  LotsListByBillingAccountNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LotsOperations operations. */\nexport class LotsOperationsImpl implements LotsOperations {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class LotsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a\n   * billing profile. Microsoft Azure consumption commitments are only supported for the billing account\n   * scope.\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param options The options parameters.\n   */\n  public listByBillingProfile(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: LotsListByBillingProfileOptionalParams\n  ): PagedAsyncIterableIterator<LotSummary> {\n    const iter = this.listByBillingProfilePagingAll(\n      billingAccountId,\n      billingProfileId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingProfilePagingPage(\n          billingAccountId,\n          billingProfileId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingProfilePagingPage(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: LotsListByBillingProfileOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LotSummary[]> {\n    let result: LotsListByBillingProfileResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingProfile(\n        billingAccountId,\n        billingProfileId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingProfileNext(\n        billingAccountId,\n        billingProfileId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingProfilePagingAll(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: LotsListByBillingProfileOptionalParams\n  ): AsyncIterableIterator<LotSummary> {\n    for await (const page of this.listByBillingProfilePagingPage(\n      billingAccountId,\n      billingProfileId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a\n   * billing profile. Microsoft Azure consumption commitments are only supported for the billing account\n   * scope.\n   * @param billingAccountId BillingAccount ID\n   * @param options The options parameters.\n   */\n  public listByBillingAccount(\n    billingAccountId: string,\n    options?: LotsListByBillingAccountOptionalParams\n  ): PagedAsyncIterableIterator<LotSummary> {\n    const iter = this.listByBillingAccountPagingAll(billingAccountId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByBillingAccountPagingPage(\n          billingAccountId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByBillingAccountPagingPage(\n    billingAccountId: string,\n    options?: LotsListByBillingAccountOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LotSummary[]> {\n    let result: LotsListByBillingAccountResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByBillingAccount(billingAccountId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByBillingAccountNext(\n        billingAccountId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByBillingAccountPagingAll(\n    billingAccountId: string,\n    options?: LotsListByBillingAccountOptionalParams\n  ): AsyncIterableIterator<LotSummary> {\n    for await (const page of this.listByBillingAccountPagingPage(\n      billingAccountId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a\n   * billing profile. Microsoft Azure consumption commitments are only supported for the billing account\n   * scope.\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfile(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: LotsListByBillingProfileOptionalParams\n  ): Promise<LotsListByBillingProfileResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, options },\n      listByBillingProfileOperationSpec\n    );\n  }\n\n  /**\n   * Lists all Azure credits and Microsoft Azure consumption commitments for a billing account or a\n   * billing profile. Microsoft Azure consumption commitments are only supported for the billing account\n   * scope.\n   * @param billingAccountId BillingAccount ID\n   * @param options The options parameters.\n   */\n  private _listByBillingAccount(\n    billingAccountId: string,\n    options?: LotsListByBillingAccountOptionalParams\n  ): Promise<LotsListByBillingAccountResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      listByBillingAccountOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingProfileNext\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingProfile method.\n   * @param options The options parameters.\n   */\n  private _listByBillingProfileNext(\n    billingAccountId: string,\n    billingProfileId: string,\n    nextLink: string,\n    options?: LotsListByBillingProfileNextOptionalParams\n  ): Promise<LotsListByBillingProfileNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, nextLink, options },\n      listByBillingProfileNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByBillingAccountNext\n   * @param billingAccountId BillingAccount ID\n   * @param nextLink The nextLink from the previous successful call to the ListByBillingAccount method.\n   * @param options The options parameters.\n   */\n  private _listByBillingAccountNext(\n    billingAccountId: string,\n    nextLink: string,\n    options?: LotsListByBillingAccountNextOptionalParams\n  ): Promise<LotsListByBillingAccountNextResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, nextLink, options },\n      listByBillingAccountNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByBillingProfileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/lots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Lots\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingAccountOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/lots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Lots\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingProfileNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Lots\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByBillingAccountNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Lots\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.billingAccountId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Credits } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ConsumptionManagementClient } from \"../consumptionManagementClient\";\nimport { CreditsGetOptionalParams, CreditsGetResponse } from \"../models\";\n\n/** Class containing Credits operations. */\nexport class CreditsImpl implements Credits {\n  private readonly client: ConsumptionManagementClient;\n\n  /**\n   * Initialize a new instance of the class Credits class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ConsumptionManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The credit summary by billingAccountId and billingProfileId.\n   * @param billingAccountId BillingAccount ID\n   * @param billingProfileId Azure Billing Profile ID.\n   * @param options The options parameters.\n   */\n  get(\n    billingAccountId: string,\n    billingProfileId: string,\n    options?: CreditsGetOptionalParams\n  ): Promise<CreditsGetResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, billingProfileId, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/credits/balanceSummary\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CreditSummary\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.billingAccountId,\n    Parameters.billingProfileId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  UsageDetailsImpl,\n  MarketplacesImpl,\n  BudgetsImpl,\n  TagsImpl,\n  ChargesImpl,\n  BalancesImpl,\n  ReservationsSummariesImpl,\n  ReservationsDetailsImpl,\n  ReservationRecommendationsImpl,\n  ReservationRecommendationDetailsImpl,\n  ReservationTransactionsImpl,\n  PriceSheetImpl,\n  OperationsImpl,\n  AggregatedCostImpl,\n  EventsOperationsImpl,\n  LotsOperationsImpl,\n  CreditsImpl\n} from \"./operations\";\nimport {\n  UsageDetails,\n  Marketplaces,\n  Budgets,\n  Tags,\n  Charges,\n  Balances,\n  ReservationsSummaries,\n  ReservationsDetails,\n  ReservationRecommendations,\n  ReservationRecommendationDetails,\n  ReservationTransactions,\n  PriceSheet,\n  Operations,\n  AggregatedCost,\n  EventsOperations,\n  LotsOperations,\n  Credits\n} from \"./operationsInterfaces\";\nimport { ConsumptionManagementClientOptionalParams } from \"./models\";\n\nexport class ConsumptionManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the ConsumptionManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Azure Subscription ID.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: ConsumptionManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: ConsumptionManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-consumption/9.2.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-10-01\";\n    this.usageDetails = new UsageDetailsImpl(this);\n    this.marketplaces = new MarketplacesImpl(this);\n    this.budgets = new BudgetsImpl(this);\n    this.tags = new TagsImpl(this);\n    this.charges = new ChargesImpl(this);\n    this.balances = new BalancesImpl(this);\n    this.reservationsSummaries = new ReservationsSummariesImpl(this);\n    this.reservationsDetails = new ReservationsDetailsImpl(this);\n    this.reservationRecommendations = new ReservationRecommendationsImpl(this);\n    this.reservationRecommendationDetails = new ReservationRecommendationDetailsImpl(\n      this\n    );\n    this.reservationTransactions = new ReservationTransactionsImpl(this);\n    this.priceSheet = new PriceSheetImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.aggregatedCost = new AggregatedCostImpl(this);\n    this.eventsOperations = new EventsOperationsImpl(this);\n    this.lotsOperations = new LotsOperationsImpl(this);\n    this.credits = new CreditsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  usageDetails: UsageDetails;\n  marketplaces: Marketplaces;\n  budgets: Budgets;\n  tags: Tags;\n  charges: Charges;\n  balances: Balances;\n  reservationsSummaries: ReservationsSummaries;\n  reservationsDetails: ReservationsDetails;\n  reservationRecommendations: ReservationRecommendations;\n  reservationRecommendationDetails: ReservationRecommendationDetails;\n  reservationTransactions: ReservationTransactions;\n  priceSheet: PriceSheet;\n  operations: Operations;\n  aggregatedCost: AggregatedCost;\n  eventsOperations: EventsOperations;\n  lotsOperations: LotsOperations;\n  credits: Credits;\n}\n"],"names":["KnownMetrictype","KnownUsageDetailsKind","KnownCategoryType","KnownTimeGrainType","KnownBudgetOperatorType","KnownOperatorType","KnownThresholdType","KnownCultureCode","KnownChargeSummaryKind","KnownBillingFrequency","KnownDatagrain","KnownReservationRecommendationKind","KnownTerm","KnownLookBackPeriod","KnownEventType","KnownLotSource","KnownStatus","KnownPricingModelType","KnownScope","BudgetMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.UsageDetailsListResult","Mappers.ErrorResponse","Parameters.expand","Parameters.filter","Parameters.skiptoken","Parameters.top","Parameters.apiVersion","Parameters.metric","Parameters.$host","Parameters.scope","Parameters.accept","Parameters.nextLink","Mappers.MarketplacesListResult","getOperationSpec","Mappers.BudgetsListResult","Mappers.Budget","Parameters.budgetName","Parameters.parameters","Parameters.contentType","Mappers.TagsResult","Mappers.ChargesListResult","Parameters.startDate","Parameters.endDate","Parameters.apply","Mappers.Balance","Parameters.billingAccountId","Parameters.billingPeriodName","listByReservationOrderOperationSpec","listByReservationOrderAndReservationOperationSpec","listByReservationOrderNextOperationSpec","listByReservationOrderAndReservationNextOperationSpec","Mappers.ReservationSummariesListResult","Parameters.grain","Parameters.reservationOrderId","Parameters.reservationId","Parameters.reservationId1","Parameters.reservationOrderId1","Mappers.ReservationDetailsListResult","Parameters.filter1","Mappers.ReservationRecommendationsListResult","Mappers.ReservationRecommendationDetailsModel","Mappers.HighCasedErrorResponse","Parameters.region","Parameters.term","Parameters.lookBackPeriod","Parameters.product","listByBillingProfileOperationSpec","listByBillingProfileNextOperationSpec","Mappers.ReservationTransactionsListResult","Mappers.ModernReservationTransactionsListResult","Parameters.billingProfileId","Mappers.PriceSheetResult","Parameters.subscriptionId","Mappers.OperationListResult","Mappers.ManagementGroupAggregatedCostResult","Parameters.managementGroupId","listByBillingAccountOperationSpec","listByBillingAccountNextOperationSpec","Mappers.Events","Parameters.startDate1","Parameters.endDate1","Mappers.Lots","Mappers.CreditSummary","coreRestPipeline"],"mappings":"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"}