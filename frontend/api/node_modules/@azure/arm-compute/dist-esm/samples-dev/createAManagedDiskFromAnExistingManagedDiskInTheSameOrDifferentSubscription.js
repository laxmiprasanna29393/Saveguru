/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Creates or updates a disk.
 *
 * @summary Creates or updates a disk.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-08-01/examples/CreateAManagedDiskFromAnExistingManagedDisk.json
 */
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
function createAManagedDiskFromAnExistingManagedDiskInTheSameOrDifferentSubscription() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const diskName = "myDisk2";
        const disk = {
            creationData: {
                createOption: "Copy",
                sourceResourceId: "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myDisk1"
            },
            location: "West US"
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.disks.beginCreateOrUpdateAndWait(resourceGroupName, diskName, disk);
        console.log(result);
    });
}
createAManagedDiskFromAnExistingManagedDiskInTheSameOrDifferentSubscription().catch(console.error);
//# sourceMappingURL=createAManagedDiskFromAnExistingManagedDiskInTheSameOrDifferentSubscription.js.map