/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
 *
 * @summary The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateAPlatformImageVmWithUnmanagedOsAndDataDisks.json
 */
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
function createAPlatformImageVMWithUnmanagedOSAndDataDisks() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmName = "{vm-name}";
        const parameters = {
            hardwareProfile: { vmSize: "Standard_D2_v2" },
            location: "westus",
            networkProfile: {
                networkInterfaces: [
                    {
                        id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}",
                        primary: true
                    }
                ]
            },
            osProfile: {
                adminPassword: "{your-password}",
                adminUsername: "{your-username}",
                computerName: "myVM"
            },
            storageProfile: {
                dataDisks: [
                    {
                        createOption: "Empty",
                        diskSizeGB: 1023,
                        lun: 0,
                        vhd: {
                            uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk0.vhd"
                        }
                    },
                    {
                        createOption: "Empty",
                        diskSizeGB: 1023,
                        lun: 1,
                        vhd: {
                            uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk1.vhd"
                        }
                    }
                ],
                imageReference: {
                    offer: "WindowsServer",
                    publisher: "MicrosoftWindowsServer",
                    sku: "2016-Datacenter",
                    version: "latest"
                },
                osDisk: {
                    name: "myVMosdisk",
                    caching: "ReadWrite",
                    createOption: "FromImage",
                    vhd: {
                        uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/myDisk.vhd"
                    }
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachines.beginCreateOrUpdateAndWait(resourceGroupName, vmName, parameters);
        console.log(result);
    });
}
createAPlatformImageVMWithUnmanagedOSAndDataDisks().catch(console.error);
//# sourceMappingURL=createAPlatformImageVMWithUnmanagedOSAndDataDisks.js.map