/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Create or update a VM scale set.
 *
 * @summary Create or update a VM scale set.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-11-01/examples/compute/CreateACustomImageScaleSetFromAnUnmanagedGeneralizedOsImage.json
 */
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
function createACustomImageScaleSetFromAnUnmanagedGeneralizedOSImage() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "myResourceGroup";
        const vmScaleSetName = "{vmss-name}";
        const parameters = {
            location: "westus",
            overprovision: true,
            sku: { name: "Standard_D1_v2", capacity: 3, tier: "Standard" },
            upgradePolicy: { mode: "Manual" },
            virtualMachineProfile: {
                networkProfile: {
                    networkInterfaceConfigurations: [
                        {
                            name: "{vmss-name}",
                            enableIPForwarding: true,
                            ipConfigurations: [
                                {
                                    name: "{vmss-name}",
                                    subnet: {
                                        id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}"
                                    }
                                }
                            ],
                            primary: true
                        }
                    ]
                },
                osProfile: {
                    adminPassword: "{your-password}",
                    adminUsername: "{your-username}",
                    computerNamePrefix: "{vmss-name}"
                },
                storageProfile: {
                    osDisk: {
                        name: "osDisk",
                        caching: "ReadWrite",
                        createOption: "FromImage",
                        image: {
                            uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd"
                        }
                    }
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.virtualMachineScaleSets.beginCreateOrUpdateAndWait(resourceGroupName, vmScaleSetName, parameters);
        console.log(result);
    });
}
createACustomImageScaleSetFromAnUnmanagedGeneralizedOSImage().catch(console.error);
//# sourceMappingURL=createACustomImageScaleSetFromAnUnmanagedGeneralizedOSImage.js.map