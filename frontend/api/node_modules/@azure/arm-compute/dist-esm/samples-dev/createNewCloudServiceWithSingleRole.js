/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Create or update a cloud service. Please note some properties can be set only during cloud service creation.
 *
 * @summary Create or update a cloud service. Please note some properties can be set only during cloud service creation.
 * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/stable/2021-03-01/examples/CreateCloudServiceWithSingleRole.json
 */
import { ComputeManagementClient } from "@azure/arm-compute";
import { DefaultAzureCredential } from "@azure/identity";
function createNewCloudServiceWithSingleRole() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "{subscription-id}";
        const resourceGroupName = "ConstosoRG";
        const cloudServiceName = "{cs-name}";
        const parameters = {
            location: "westus",
            properties: {
                configuration: "{ServiceConfiguration}",
                networkProfile: {
                    loadBalancerConfigurations: [
                        {
                            name: "myLoadBalancer",
                            properties: {
                                frontendIPConfigurations: [
                                    {
                                        name: "myfe",
                                        properties: {
                                            publicIPAddress: {
                                                id: "/subscriptions/{subscription-id}/resourceGroups/ConstosoRG/providers/Microsoft.Network/publicIPAddresses/myPublicIP"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                packageUrl: "{PackageUrl}",
                roleProfile: {
                    roles: [
                        {
                            name: "ContosoFrontend",
                            sku: { name: "Standard_D1_v2", capacity: 1, tier: "Standard" }
                        }
                    ]
                },
                upgradeMode: "Auto"
            }
        };
        const options = { parameters: parameters };
        const credential = new DefaultAzureCredential();
        const client = new ComputeManagementClient(credential, subscriptionId);
        const result = yield client.cloudServices.beginCreateOrUpdateAndWait(resourceGroupName, cloudServiceName, options);
        console.log(result);
    });
}
createNewCloudServiceWithSingleRole().catch(console.error);
//# sourceMappingURL=createNewCloudServiceWithSingleRole.js.map